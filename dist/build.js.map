{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/libs/build.js"],"names":["Fliplet","Widget","instance","widgetData","then","Vue","el","data","newComment","message","comments","id","text","userInitials","userFullName","timestamp","userAvatar","threads","computed","commentsLength","methods","addComment","push"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// Fliplet.Widget.instance(\"comments\", function (widgetData) {\r\n//   const selector = `[data-comments-id=\"${widgetData.id}\"]`;\r\n//   debugger\r\n//   Fliplet().then(function () {\r\n//     new Vue({\r\n//       el: $(selector)[0],\r\n//       data() {\r\n//         return {\r\n//           containsData: \"test data\",\r\n//         };\r\n//       },\r\n//       methods: {},\r\n//       async mounted() {},\r\n//     });\r\n//   });\r\n// });\r\n\r\n// Fliplet.Widget.instance({\r\n//   name: 'comments',\r\n//   render: {\r\n//     template: [\r\n//       '<div id=\"app-comments\">',\r\n//       '</div>'\r\n//     ].join(''),\r\n//     ready: async function() {\r\n//       Fliplet().then(function() {\r\n//         new Vue({\r\n//           el: '#id',\r\n//           data: {\r\n//             message: 'Hello, Vue!'\r\n//           }\r\n//         });\r\n//       });\r\n//     }\r\n//   }\r\n\r\n\r\nFliplet.Widget.instance('comments', function(widgetData) {\r\n  // Fliplet.Widget.initializeChildren(this.$el, this);\r\n  // const selector = `[data-comments-id=\"${widgetData.id}\"]`;\r\n\r\n  debugger;\r\n  Fliplet().then(function() {\r\n    new Vue({\r\n      el: '#app-comments',\r\n      data() {\r\n        return {\r\n          newComment: '',\r\n          message: 'Hello, Vue!',\r\n          comments: [\r\n            {\r\n              id: 1,\r\n              data: {\r\n                text: 'Comment 1',\r\n                userInitials: 'AB',\r\n                userFullName: 'Alicia B',\r\n                timestamp: '2020-01-01T00:00:00Z',\r\n                userAvatar: 'https://randomuser.me/api/portraits'\r\n              },\r\n              threads: []\r\n            },\r\n            {\r\n              id: 2,\r\n              data: {\r\n                text: 'Comment 2',\r\n                userInitials: 'CD',\r\n                userFullName: 'Cory D',\r\n                timestamp: '2020-01-02T00:00:00Z',\r\n                userAvatar: null\r\n              },\r\n              threads: [{\r\n                id: 2,\r\n                data: {\r\n                  text: 'Comment 2',\r\n                  userInitials: 'CD',\r\n                  userFullName: 'Cory D',\r\n                  timestamp: '2020-01-02T00:00:00Z',\r\n                  userAvatar: null\r\n                }\r\n              }]\r\n            },\r\n            {\r\n              id: 3,\r\n              data: {\r\n                text: 'Comment 3',\r\n                userInitials: 'EF',\r\n                userFullName: 'Evan F',\r\n                timestamp: '2020-01-03T00:00:00Z',\r\n                userAvatar: null\r\n              },\r\n              threads: [{\r\n                id: 3,\r\n                data: {\r\n                  text: 'Comment 3',\r\n                  userInitials: 'EF',\r\n                  userFullName: 'Evan F',\r\n                  timestamp: '2020-01-03T00:00:00Z',\r\n                  userAvatar: 'https://randomuser.me/api/portraits'\r\n                }\r\n              }]\r\n            }\r\n          ]\r\n        };\r\n      },\r\n      computed: {\r\n        commentsLength: function() {\r\n          return this.message + ' text';\r\n        }\r\n      },\r\n      methods: {\r\n        // getTimeFromTimestamp: function(timestamp) {\r\n        //   return moment(timestamp).format('HH:mm:ss');\r\n        // },\r\n        // getDateFromTimestamp: function(timestamp) {\r\n        //   return moment(timestamp).format('MM/DD/YYYY');\r\n        // },\r\n        addComment: function() {\r\n          if (this.newComment) {\r\n            this.comments.push({\r\n              id: this.commentsLength + 1,\r\n              text: this.newComment\r\n            });\r\n            this.newComment = '';\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n});\r\n"],"sourceRoot":""}
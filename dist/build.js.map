{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/libs/build.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js"],"names":["Fliplet","Widget","instance","widgetData","dataSource","showToastMessage","columnEmail","DS_COMMENTS","DS_USERS","id","QUERY","Navigate","query","EMAIL_COLUMN","USER_PHOTO_COLUMN","columnUserPhoto","FLAGGED_EMAILS","columnFlaggedEmails","loggedUser","dataSourceEntryId","initializeChildren","$el","initVue","message","UI","Toast","$","removeClass","then","Vue","el","data","commentInput","commentState","comments","computed","commentsData","methods","showToastProgress","arguments","length","undefined","position","backdrop","tapToDismiss","duration","closeToastProgress","dismiss","flagComment","comment","thisy","flagged","DataSources","connectByName","connection","update","Flagged","GUID","setTimeout","toggleThreads","showThreads","getUserData","userEmails","connect","find","where","_defineProperty","$in","attributes","records","getComments","entryId","map","users","threads","forEach","currentUser","user","userInitials","split","name","join","userAvatar","Media","authenticate","openDropdown","push","filter","thread","likedLoginByUser","likes","includes","Email","isLoggedUserOwnerOfComment","getTimeFromTimestamp","timestamp","moment","format","getDateFromTimestamp","manageLike","Likes","clearState","prepareComment","action","Message","manageComment","toInsert","Timestamp","Date","toISOString","insert","record","unshift","deleteComment","isThread","options","title","labels","confirm","result","console","log","deleteCommentPromise","removeById","commit","append","extend","mounted","Session","get","session","_"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","Fliplet.Widget.instance('comments', function(widgetData) {\r\n  if (!widgetData.dataSource) {\r\n    return showToastMessage('Please select Data source');\r\n  }\r\n\r\n  if (!widgetData.columnEmail) {\r\n    return showToastMessage('Please select column for the email');\r\n  }\r\n\r\n  const DS_COMMENTS = 'Global Comments';\r\n  const DS_USERS = widgetData.dataSource.id;\r\n  const QUERY = Fliplet.Navigate.query;\r\n  const EMAIL_COLUMN = widgetData.columnEmail;\r\n  const USER_PHOTO_COLUMN = widgetData.columnUserPhoto;\r\n  const FLAGGED_EMAILS = widgetData.columnFlaggedEmails;\r\n  debugger\r\n  let loggedUser = null;\r\n\r\n  if (!QUERY.dataSourceEntryId) {\r\n    showToastMessage('No data source entry ID provided');\r\n  }\r\n\r\n  Fliplet.Widget.initializeChildren(this.$el, this);\r\n\r\n  initVue();\r\n\r\n  function showToastMessage(message) {\r\n    return Fliplet.UI.Toast(message);\r\n  }\r\n\r\n  function initVue() {\r\n    $('[name=\"comments\"]').removeClass('hidden');\r\n    Fliplet().then(function() {\r\n      new Vue({\r\n        el: '#app-comments',\r\n        data: {\r\n          commentInput: '',\r\n          commentState: null,\r\n          message: 'Hello, Vue!',\r\n          comments: []\r\n        },\r\n        computed: {\r\n          commentsData() {\r\n            return this.comments;\r\n          }\r\n        },\r\n        methods: {\r\n          showToastProgress(message = 'Processing') {\r\n            Fliplet.UI.Toast({\r\n              message,\r\n              position: 'center',\r\n              backdrop: true,\r\n              tapToDismiss: false,\r\n              duration: false\r\n            });\r\n          },\r\n          closeToastProgress() {\r\n            Fliplet.UI.Toast.dismiss();\r\n          },\r\n          flagComment(comment) {\r\n            var thisy = this;\r\n\r\n            thisy.showToastProgress('Flagging comment...');\r\n            comment.data.flagged = true;\r\n\r\n            Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(connection) {\r\n              return connection.update(comment.id, {\r\n                Flagged: comment.data.flagged,\r\n                GUID: comment.data.GUID\r\n              });\r\n            }).then(() => {\r\n              thisy.closeToastProgress();\r\n              setTimeout(() => {\r\n                comment.data.flagged = false;\r\n              }, 2000);\r\n            });\r\n          },\r\n          toggleThreads(comment) {\r\n            comment.showThreads = !comment.showThreads;\r\n          },\r\n          getUserData(userEmails) {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then(connection => connection.find({\r\n                where: { [EMAIL_COLUMN]: { $in: userEmails } },\r\n                attributes: [EMAIL_COLUMN, 'User Full Name', USER_PHOTO_COLUMN]\r\n              }))\r\n              .then(records => records);\r\n          },\r\n          getComments() {\r\n            var thisy = this;\r\n\r\n            thisy.showToastProgress('Loading comments...');\r\n\r\n            var entryId = '123456'; // Replace with the entry ID from the url\r\n\r\n            return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n              function(connection) {\r\n                return connection\r\n                  .find({ where: { 'Entry Id': entryId } })\r\n                  .then(function(records) {\r\n                    var userEmails = records.map(\r\n                      (el) => el.data['Author Email']\r\n                    );\r\n\r\n                    return thisy.getUserData(userEmails).then(function(users) {\r\n                      var comments = [];\r\n                      var threads = [];\r\n\r\n                      records.forEach((el) => {\r\n                        var currentUser = users.find(\r\n                          (user) => user.data[EMAIL_COLUMN] === el.data['Author Email']\r\n                        );\r\n\r\n                        el.data.userInitials = (currentUser.data['User Full Name'] || '')\r\n                          .split(' ')\r\n                          .map((name) => name[0])\r\n                          .join('');\r\n                        el.data.userAvatar = currentUser.data[USER_PHOTO_COLUMN]\r\n                          ? Fliplet.Media.authenticate(currentUser.data[USER_PHOTO_COLUMN])\r\n                          : null;\r\n                        el.data.flagged = false;\r\n                        el.data.openDropdown = false;\r\n\r\n                        if (el.data['Comment GUID']) {\r\n                          threads.push(el);\r\n                        } else {\r\n                          comments.push(el);\r\n                        }\r\n                      });\r\n                      debugger;\r\n                      thisy.comments = comments.map((el) => {\r\n                        el.showThreads = false;\r\n                        el.threads = threads.filter(\r\n                          (thread) =>\r\n                            thread.data['Comment GUID'] === el.data['GUID']\r\n                        );\r\n\r\n                        return el;\r\n                      });\r\n\r\n                      thisy.closeToastProgress();\r\n                    });\r\n                  });\r\n              }\r\n            );\r\n          },\r\n          likedLoginByUser(likes) {\r\n            return likes.includes(loggedUser.Email);\r\n          },\r\n          isLoggedUserOwnerOfComment(comment) {\r\n            return comment.data['Author Email'] === loggedUser.Email;\r\n          },\r\n          getTimeFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('HH:mm');\r\n          },\r\n          getDateFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('MM/DD/YYYY');\r\n          },\r\n          manageLike(comment) {\r\n            if (this.likedLoginByUser(comment.data.Likes)) {\r\n              comment.data.Likes = comment.data.Likes.filter(\r\n                (el) => el !== loggedUser[EMAIL_COLUMN]\r\n              );\r\n            } else {\r\n              comment.data.Likes.push(loggedUser[EMAIL_COLUMN]);\r\n            }\r\n\r\n            return Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n              connection\r\n            ) {\r\n              return connection.update(comment.id, {\r\n                Likes: comment.data.Likes,\r\n                GUID: comment.data.GUID\r\n              });\r\n            });\r\n          },\r\n          clearState() {\r\n            this.commentState = null;\r\n            this.commentInput = '';\r\n          },\r\n          prepareComment(comment, action) {\r\n            this.commentState = {\r\n              comment,\r\n              action\r\n            };\r\n\r\n            if (action === 'edit') {\r\n              this.commentInput = comment.data.Message;\r\n            }\r\n          },\r\n          manageComment() {\r\n            // todo add showToastProgress for edit/add comment\r\n            var thisy = this;\r\n\r\n            if (thisy.commentInput) {\r\n              thisy.showToastProgress('Adding comment...');\r\n\r\n              if (!thisy.commentState || thisy.commentState.action === 'reply') {\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n                  connection\r\n                ) {\r\n                  var toInsert = {\r\n                    Message: thisy.commentInput,\r\n                    'Author Email': loggedUser[EMAIL_COLUMN],\r\n                    Timestamp: new Date().toISOString(),\r\n                    'Entry Id': QUERY.dataSourceEntryId,\r\n                    Likes: []\r\n                  };\r\n\r\n                  if (thisy.commentState && thisy.commentState.action === 'reply') {\r\n                    toInsert['Comment GUID'] = thisy.commentState.comment.data['GUID'];\r\n                  }\r\n\r\n                  return connection.insert(toInsert).then(function(record) {\r\n                    record.data.userInitials = (loggedUser['User Full Name'] || '')\r\n                      .split(' ')\r\n                      .map((name) => name[0])\r\n                      .join('');\r\n                    record.data.userAvatar = loggedUser[USER_PHOTO_COLUMN]\r\n                      ? Fliplet.Media.authenticate(loggedUser[USER_PHOTO_COLUMN])\r\n                      : null;\r\n                    record.data.flagged = false;\r\n                    record.data.openDropdown = false;\r\n                    record.showThreads = false;\r\n                    record.threads = [];\r\n\r\n                    if (thisy.commentState && thisy.commentState.action === 'reply') {\r\n                      thisy.comments = thisy.comments.map(el => {\r\n                        if (el.data['GUID'] === thisy.commentState.comment.data['GUID']) {\r\n                          el.threads.push(record);\r\n                        }\r\n\r\n                        return el;\r\n                      });\r\n                    } else {\r\n                      thisy.comments.unshift(record);\r\n                    }\r\n\r\n                    thisy.closeToastProgress();\r\n                    thisy.commentInput = '';\r\n                    thisy.commentState = null;\r\n                  });\r\n                });\r\n              } else {\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n                  connection\r\n                ) {\r\n                  return connection.update(thisy.commentState.comment.id, {\r\n                    Message: thisy.commentInput,\r\n                    GUID: thisy.commentState.comment.data['GUID']\r\n                  }).then(function() {\r\n                    thisy.comments = thisy.comments.map((el) => {\r\n                      if (el.id === thisy.commentState.comment.id) {\r\n                        el.data.Message = thisy.commentInput;\r\n                      }\r\n                    });\r\n\r\n                    thisy.commentInput = '';\r\n                    thisy.commentState = null;\r\n                    thisy.closeToastProgress();\r\n                  });\r\n                });\r\n              }\r\n            }\r\n          },\r\n          deleteComment(comment, isThread = false) {\r\n            var thisy = this;\r\n            var options = {\r\n              title: 'Delete comment?',\r\n              message: 'Are you sure you want to delete this comment?',\r\n              labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n            };\r\n\r\n            Fliplet.Navigate.confirm(options)\r\n              .then(function(result) {\r\n                if (!result) {\r\n                  return console.log('Not confirmed!');\r\n                }\r\n\r\n                thisy.showToastProgress('Deleting comment...');\r\n\r\n                var deleteCommentPromise;\r\n\r\n                if (isThread) {\r\n                  deleteCommentPromise = Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n                    connection\r\n                  ) {\r\n                    return connection.removeById(comment.id).then(function() {\r\n                      thisy.comments = thisy.comments.map(el => {\r\n                        if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n                          el.threads = el.threads.filter((el) => el.id !== comment.id);\r\n                        }\r\n\r\n                        return el;\r\n                      });\r\n\r\n                      thisy.closeToastProgress();\r\n                    });\r\n                  });\r\n                } else {\r\n                  deleteCommentPromise = Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n                    connection\r\n                  ) {\r\n                    return connection.find({ where: { 'Comment GUID': comment.data.GUID } }).then(function(records) {\r\n                      return connection.commit({\r\n                        delete: records.map((el) => el.id),\r\n                        append: true,\r\n                        extend: true\r\n                      }).then(function() {\r\n                        return connection.removeById(comment.id).then(function() {\r\n                          thisy.comments = thisy.comments.filter((el) => el.id !== comment.id);\r\n                          thisy.closeToastProgress();\r\n                        });\r\n                      });\r\n                    });\r\n                  });\r\n                }\r\n\r\n                return deleteCommentPromise;\r\n              });\r\n          }\r\n          // deleteComment(comment, isThread = false) {\r\n          //   var thisy = this;\r\n          //   var options = {\r\n          //     title: 'Delete comment?',\r\n          //     message: 'Are you sure you want to delete this comment?',\r\n          //     labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n          //   };\r\n\r\n          //   Fliplet.Navigate.confirm(options)\r\n          //     .then(function(result) {\r\n          //       if (!result) {\r\n          //         return console.log('Not confirmed!');\r\n          //       }\r\n\r\n          //       thisy.showToastProgress('Deleting comment...');\r\n\r\n          //       if (isThread) {\r\n          //         return Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n          //           connection\r\n          //         ) {\r\n          //           return connection.removeById(comment.id).then(function() {\r\n          //             thisy.comments = thisy.comments.map(el => {\r\n          //               if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n          //                 el.threads = el.threads.filter((el) => el.id !== comment.id);\r\n          //               }\r\n\r\n          //               return el;\r\n          //             });\r\n\r\n          //             thisy.closeToastProgress();\r\n          //           });\r\n          //         });\r\n          //       }\r\n\r\n          //       return Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n          //         connection\r\n          //       ) {\r\n          //         return connection.find({ where: { 'Comment GUID': comment.data.GUID } }).then(function(records) {\r\n          //           return connection.commit({\r\n          //             delete: records.map((el) => el.id),\r\n          //             append: true,\r\n          //             extend: true\r\n          //           }).then(function() {\r\n          //             return connection.removeById(comment.id).then(function() {\r\n          //               thisy.comments = thisy.comments.filter((el) => el.id !== comment.id);\r\n          //               thisy.closeToastProgress();\r\n          //             });\r\n          //           });\r\n          //         });\r\n          //       });\r\n          //     });\r\n          // }\r\n        },\r\n        mounted() {\r\n          var thisy = this;\r\n\r\n          Fliplet.Session.get().then((session) => {\r\n            loggedUser = _.get(session, 'entries.dataSource.data');\r\n\r\n            if (loggedUser) {\r\n              thisy.getComments();\r\n            } else {\r\n              showToastMessage('You need to be logged in to see the comments');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n});\r\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}
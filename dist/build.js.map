{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/libs/build.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"names":["Fliplet","Widget","instance","widgetData","_this","COMMENTS","COMMENTS_INSTANCE_ID","id","DS_USERS","userDataSource","QUERY","Navigate","query","EMAIL_COLUMN","columnEmail","USER_PHOTO_COLUMN","columnUserPhoto","FLAGGED_EMAILS","flaggedEmails","FLAGGED_MAIL_CONTENT","flaggedMailContent","USER_NAMES","userNames","COMMENTS_DS_ID","commentsDataSourceId","MODE_INTERACT","Env","get","EMAILS_TO_NOTIFY_FLAGGED_COMMENT","split","map","el","trim","filter","RegExp","test","loggedUser","findParents","instanceId","then","widgets","dynamicContainer","recordContainer","forEach","widget","dataSourceId","showContent","errorMessageStructureNotValid","$","$el","showToastMessage","length","dataSourceEntryId","initializeChildren","loadComments","$element","message","addClass","UI","Toast","mode","toggle","removeClass","showToastProgress","arguments","undefined","position","backdrop","tapToDismiss","duration","initVue","Vue","data","commentInput","commentState","comments","computed","commentsData","methods","clearState","closeToastProgress","dismiss","checkCommentState","comment","state","action","flagComment","_this2","flagged","DataSources","connect","connection","update","Flagged","GUID","getExistingEmailsToNotifyAboutFlag","existingEmails","emails","user","adminName","concat","options","to","email","name","type","html","subject","Communicate","batchSendEmail","setTimeout","toggleThreads","showThreads","find","where","_defineProperty","$in","attributes","_toConsumableArray","records","getUserData","userEmails","getComments","_this3","entryId","users","threads","currentUser","userFullName","getUserFullName","userInitials","getUserInitials","userAvatar","Media","authenticate","openDropdown","push","thread","userData","join","isLikedByLoginUser","likes","includes","Email","isLoggedUserOwnerOfComment","getTimeFromTimestamp","timestamp","moment","format","getDateFromTimestamp","manageLike","Likes","clearCommentState","prepareComment","Message","manageComment","_this4","toInsert","Timestamp","Date","toISOString","insert","record","unshift","deleteComment","_this5","isThread","title","labels","confirm","result","Promise","reject","deleteCommentPromise","removeById","commit","append","extend","mounted","_this6","Session","session","_"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// TODO: Change Entry Id for entity to be a GUID\r\n// TODO Implement tinyMce\r\n// TODO Implement mention users\r\nFliplet.Widget.instance('comments', function(widgetData) {\r\n  const COMMENTS = this;\r\n  const COMMENTS_INSTANCE_ID = COMMENTS.id;\r\n  const DS_USERS = widgetData.userDataSource;\r\n  const QUERY = Fliplet.Navigate.query;\r\n  const EMAIL_COLUMN = widgetData.columnEmail;\r\n  const USER_PHOTO_COLUMN = widgetData.columnUserPhoto;\r\n  const FLAGGED_EMAILS = widgetData.flaggedEmails;\r\n  const FLAGGED_MAIL_CONTENT = widgetData.flaggedMailContent;\r\n  const USER_NAMES = widgetData.userNames;\r\n  const COMMENTS_DS_ID = widgetData.commentsDataSourceId;\r\n  const MODE_INTERACT = Fliplet.Env.get('mode') === 'interact';\r\n\r\n  const EMAILS_TO_NOTIFY_FLAGGED_COMMENT = !FLAGGED_EMAILS\r\n    ? []\r\n    : FLAGGED_EMAILS.split(',')\r\n      .map((el) => el.trim())\r\n      .filter((el) => RegExp(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/).test(el));\r\n  let loggedUser = null;\r\n\r\n\r\n  Fliplet.Widget.findParents({\r\n    instanceId: COMMENTS_INSTANCE_ID\r\n  }).then((widgets) => {\r\n    let dynamicContainer = null;\r\n    let recordContainer = null;\r\n\r\n    widgets.forEach((widget) => {\r\n      if (widget.package === 'com.fliplet.dynamic-container') {\r\n        dynamicContainer = widget;\r\n      } else if (widget.package === 'com.fliplet.record-container') {\r\n        recordContainer = widget;\r\n      }\r\n    });\r\n\r\n    if (!dynamicContainer || !dynamicContainer.dataSourceId) {\r\n      showContent('not-configured');\r\n\r\n      return errorMessageStructureNotValid($(COMMENTS.$el), 'This component needs to be placed inside a Dynamic Container and select a data source');\r\n    } else if (!recordContainer) {\r\n      showContent('not-configured');\r\n\r\n      return errorMessageStructureNotValid($(COMMENTS.$el), 'This component needs to be placed inside a Record component');\r\n    }\r\n\r\n    if (!DS_USERS) {\r\n      if (MODE_INTERACT) {\r\n        showContent('not-configured');\r\n      } else {\r\n        showContent('configured');\r\n      }\r\n\r\n      return showToastMessage('Please select Data source');\r\n    }\r\n\r\n    if (!EMAIL_COLUMN) {\r\n      if (MODE_INTERACT) {\r\n        showContent('not-configured');\r\n      } else {\r\n        showContent('configured');\r\n      }\r\n\r\n      return showToastMessage('Please select column for the email');\r\n    }\r\n\r\n    if (!USER_NAMES || !USER_NAMES.length) {\r\n      if (MODE_INTERACT) {\r\n        showContent('not-configured');\r\n      } else {\r\n        showContent('configured');\r\n      }\r\n\r\n      return showToastMessage('Please select user names');\r\n    }\r\n\r\n    if (!QUERY.dataSourceEntryId) {\r\n      if (MODE_INTERACT) {\r\n        showContent('not-configured');\r\n      } else {\r\n        showContent('configured');\r\n      }\r\n\r\n      return showToastMessage('No data source entry ID provided');\r\n    }\r\n\r\n    if (!MODE_INTERACT) {\r\n      showContent('configured');\r\n      Fliplet.Widget.initializeChildren(this.$el, this);\r\n      loadComments();\r\n    } else {\r\n      showContent('configured-interact');\r\n    }\r\n  });\r\n\r\n  // TODO remove when product provide solution\r\n  function errorMessageStructureNotValid($element, message) {\r\n    $element.addClass('component-error-before-xxx');\r\n    Fliplet.UI.Toast(message);\r\n  }\r\n\r\n  function showContent(mode) {\r\n    $('.configured').toggle(mode === 'configured');\r\n    $('.not-configured').toggle(mode === 'not-configured');\r\n    $('.configured-interact').toggle(mode === 'configured-interact');\r\n    $('[name=\"comments\"]').removeClass('hidden');\r\n  }\r\n\r\n  function showToastProgress(message = 'Processing') {\r\n    Fliplet.UI.Toast({\r\n      message,\r\n      position: 'center',\r\n      backdrop: true,\r\n      tapToDismiss: false,\r\n      duration: false\r\n    });\r\n  }\r\n\r\n  function loadComments() {\r\n    showToastProgress('Loading comments...');\r\n    initVue();\r\n  }\r\n\r\n  function showToastMessage(message) {\r\n    return Fliplet.UI.Toast(message);\r\n  }\r\n\r\n  function initVue() {\r\n    Fliplet().then(() => {\r\n      new Vue({\r\n        el: '#app-comments',\r\n        data: {\r\n          commentInput: '',\r\n          commentState: null,\r\n          message: 'Hello, Vue!',\r\n          comments: []\r\n        },\r\n        computed: {\r\n          commentsData() {\r\n            return this.comments;\r\n          }\r\n        },\r\n        methods: {\r\n          clearState() {\r\n            this.commentState = null;\r\n            this.commentInput = '';\r\n          },\r\n          closeToastProgress() {\r\n            Fliplet.UI.Toast.dismiss();\r\n          },\r\n          checkCommentState(comment, state) {\r\n            if (state === 'active') {\r\n              return this.commentState && this.commentState.comment.id === comment.id;\r\n            } else if (state === 'reply') {\r\n              return this.commentState && this.commentState.action === 'reply' && this.commentState.comment.id === comment.id;\r\n            } else if (state === 'edit') {\r\n              return this.commentState && this.commentState.action === 'edit' && this.commentState.comment.id === comment.id;\r\n            }\r\n\r\n            return false;\r\n          },\r\n          flagComment(comment) {\r\n            showToastProgress('Flagging the comment...');\r\n            comment.data.flagged = true;\r\n\r\n            Fliplet.DataSources.connect(COMMENTS_DS_ID)\r\n              .then(connection => {\r\n                return connection.update(comment.id, {\r\n                  Flagged: comment.data.flagged,\r\n                  GUID: comment.data.GUID\r\n                });\r\n              })\r\n              .then(() => {\r\n                if (EMAILS_TO_NOTIFY_FLAGGED_COMMENT.length) {\r\n                  return this\r\n                    .getExistingEmailsToNotifyAboutFlag()\r\n                    .then(existingEmails => {\r\n                      let emails = existingEmails.map((user) => {\r\n                        let adminName = '';\r\n\r\n                        if (USER_NAMES.length === 1) {\r\n                          adminName = user.data[USER_NAMES[0]];\r\n                        } else if (USER_NAMES.length === 2) {\r\n                          adminName = `${user.data[USER_NAMES[0]]} ${user.data[USER_NAMES[1]]}`;\r\n                        }\r\n\r\n                        return {\r\n                          options: {\r\n                            to: [\r\n                              { email: user.data[EMAIL_COLUMN], name: adminName, type: 'to' }\r\n                            ],\r\n                            html: FLAGGED_MAIL_CONTENT,\r\n                            subject: 'Comment flagged'\r\n                          // from_name: 'Example Name'\r\n                          }\r\n                        };\r\n                      });\r\n\r\n                      return Fliplet.Communicate.batchSendEmail(emails).then(() => {\r\n                        this.closeToastProgress();\r\n                        setTimeout(() => {\r\n                          comment.data.flagged = false;\r\n                        }, 2000);\r\n                      });\r\n                    });\r\n                }\r\n              });\r\n          },\r\n          toggleThreads(comment) {\r\n            comment.showThreads = !comment.showThreads;\r\n          },\r\n          getExistingEmailsToNotifyAboutFlag() {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then(connection =>\r\n                connection.find({\r\n                  where: { [EMAIL_COLUMN]: { $in: EMAILS_TO_NOTIFY_FLAGGED_COMMENT } },\r\n                  attributes: [EMAIL_COLUMN, ...USER_NAMES]\r\n                })\r\n              )\r\n              .then((records) => records);\r\n          },\r\n          getUserData(userEmails) {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then(connection =>\r\n                connection.find({\r\n                  where: { [EMAIL_COLUMN]: { $in: userEmails } },\r\n                  attributes: [\r\n                    EMAIL_COLUMN,\r\n                    ...USER_NAMES,\r\n                    USER_PHOTO_COLUMN\r\n                  ]\r\n                })\r\n              )\r\n              .then(records => records);\r\n          },\r\n          getComments() {\r\n            let entryId = QUERY.dataSourceEntryId;\r\n\r\n            return Fliplet.DataSources.connect(COMMENTS_DS_ID).then(\r\n              connection => {\r\n                return connection\r\n                  .find({ where: { 'Entry Id': entryId } })\r\n                  .then(records => {\r\n                    let userEmails = records.map(\r\n                      (el) => el.data['Author Email']\r\n                    );\r\n\r\n                    return this.getUserData(userEmails).then(users => {\r\n                      let comments = [];\r\n                      let threads = [];\r\n\r\n                      records.forEach((el) => {\r\n                        let currentUser = users.find(\r\n                          (user) =>\r\n                            user.data[EMAIL_COLUMN] === el.data['Author Email']\r\n                        );\r\n\r\n                        el.data.userFullName = this.getUserFullName(currentUser.data);\r\n                        el.data.userInitials = this.getUserInitials(currentUser.data);\r\n                        el.data.userAvatar = currentUser.data[USER_PHOTO_COLUMN]\r\n                          ? Fliplet.Media.authenticate(\r\n                            currentUser.data[USER_PHOTO_COLUMN]\r\n                          )\r\n                          : null;\r\n                        el.data.flagged = false;\r\n                        el.data.openDropdown = false;\r\n\r\n                        if (el.data['Comment GUID']) {\r\n                          threads.push(el);\r\n                        } else {\r\n                          comments.push(el);\r\n                        }\r\n                      });\r\n\r\n                      this.comments = comments.map((el) => {\r\n                        el.showThreads = false;\r\n                        el.threads = threads.filter(\r\n                          (thread) =>\r\n                            thread.data['Comment GUID'] === el.data['GUID']\r\n                        );\r\n\r\n                        return el;\r\n                      });\r\n\r\n                      this.closeToastProgress();\r\n                    });\r\n                  });\r\n              }\r\n            );\r\n          },\r\n          getUserFullName(userData) {\r\n            let userFullName = '';\r\n\r\n            if (USER_NAMES.length === 1) {\r\n              userFullName = userData[USER_NAMES[0]];\r\n            } else if (USER_NAMES.length === 2) {\r\n              userFullName = `${userData[USER_NAMES[0]]} ${userData[USER_NAMES[1]]}`;\r\n            }\r\n\r\n            return userFullName;\r\n          },\r\n          getUserInitials(userData) {\r\n            let userInitials = '';\r\n\r\n            if (USER_NAMES.length === 1) {\r\n              userInitials = (\r\n                userData[USER_NAMES[0]] || ''\r\n              )\r\n                .split(' ')\r\n                .map((name) => name[0])\r\n                .join('');\r\n            } else if (USER_NAMES.length === 2) {\r\n              userInitials = USER_NAMES.map((el) => userData[el] ? userData[el][0] : '').join('');\r\n            }\r\n\r\n            return userInitials;\r\n          },\r\n          isLikedByLoginUser(likes) {\r\n            return likes.includes(loggedUser.Email);\r\n          },\r\n          isLoggedUserOwnerOfComment(comment) {\r\n            return comment.data['Author Email'] === loggedUser.Email;\r\n          },\r\n          getTimeFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('HH:mm');\r\n          },\r\n          getDateFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('MM/DD/YYYY');\r\n          },\r\n          manageLike(comment) {\r\n            if (this.isLikedByLoginUser(comment.data.Likes)) {\r\n              comment.data.Likes = comment.data.Likes.filter(\r\n                (el) => el !== loggedUser[EMAIL_COLUMN]\r\n              );\r\n            } else {\r\n              comment.data.Likes.push(loggedUser[EMAIL_COLUMN]);\r\n            }\r\n\r\n            return Fliplet.DataSources.connect(COMMENTS_DS_ID).then(\r\n              connection => {\r\n                return connection.update(comment.id, {\r\n                  Likes: comment.data.Likes,\r\n                  GUID: comment.data.GUID\r\n                });\r\n              }\r\n            );\r\n          },\r\n          clearCommentState() {\r\n            this.commentState = null;\r\n            this.commentInput = '';\r\n          },\r\n          prepareComment(comment, action) {\r\n            this.commentState = {\r\n              comment,\r\n              action\r\n            };\r\n\r\n            if (action === 'edit') {\r\n              this.commentInput = comment.data.Message;\r\n            }\r\n          },\r\n          manageComment() {\r\n            if (this.commentInput) {\r\n              if (\r\n                !this.commentState\r\n                || this.commentState.action === 'reply'\r\n              ) {\r\n                showToastProgress('Adding comment...');\r\n                Fliplet.DataSources.connect(COMMENTS_DS_ID).then(connection => {\r\n                  let toInsert = {\r\n                    Message: this.commentInput,\r\n                    'Author Email': loggedUser[EMAIL_COLUMN],\r\n                    Timestamp: new Date().toISOString(),\r\n                    'Entry Id': QUERY.dataSourceEntryId,\r\n                    Likes: []\r\n                  };\r\n\r\n                  if (\r\n                    this.commentState\r\n                    && this.commentState.action === 'reply'\r\n                  ) {\r\n                    toInsert['Comment GUID']\r\n                      = this.commentState.comment.data['GUID'];\r\n                  }\r\n\r\n                  return connection.insert(toInsert).then(record => {\r\n                    record.data.userInitials = this.getUserInitials(loggedUser);\r\n                    record.data.userFullName = this.getUserFullName(loggedUser);\r\n                    record.data.flagged = false;\r\n                    record.data.openDropdown = false;\r\n                    record.showThreads = false;\r\n                    record.threads = [];\r\n\r\n                    if (\r\n                      this.commentState\r\n                      && this.commentState.action === 'reply'\r\n                    ) {\r\n                      this.comments = this.comments.map((el) => {\r\n                        if (\r\n                          el.data['GUID']\r\n                          === this.commentState.comment.data['GUID']\r\n                        ) {\r\n                          el.threads.push(record);\r\n                        }\r\n\r\n                        return el;\r\n                      });\r\n                    } else {\r\n                      this.comments.unshift(record);\r\n                    }\r\n\r\n                    this.closeToastProgress();\r\n                    this.clearCommentState();\r\n                  });\r\n                });\r\n              } else {\r\n                showToastProgress('Updating comment...');\r\n                Fliplet.DataSources.connect(COMMENTS_DS_ID).then(connection => {\r\n                  return connection\r\n                    .update(this.commentState.comment.id, {\r\n                      Message: this.commentInput,\r\n                      GUID: this.commentState.comment.data['GUID']\r\n                    })\r\n                    .then(() => {\r\n                      this.comments = this.comments.map((el) => {\r\n                        if (el.id === this.commentState.comment.id) {\r\n                          el.data.Message = this.commentInput;\r\n                        }\r\n\r\n                        return el;\r\n                      });\r\n\r\n                      this.clearCommentState();\r\n                      this.closeToastProgress();\r\n                    });\r\n                });\r\n              }\r\n            }\r\n          },\r\n          deleteComment(comment, isThread = false) {\r\n            let message = 'Are you sure you want to delete this comment? Note that all the threads will be deleted as well.';\r\n\r\n            if (isThread) {\r\n              message = 'Are you sure you want to delete this thread?';\r\n            }\r\n\r\n            let options = {\r\n              title: 'Delete comment?',\r\n              message,\r\n              labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n            };\r\n\r\n            Fliplet.Navigate.confirm(options).then(result => {\r\n              if (!result) {\r\n                return Promise.reject(''); // Not confirmed!\r\n              }\r\n\r\n              showToastProgress('Deleting comment...');\r\n\r\n              let deleteCommentPromise;\r\n\r\n              if (isThread) {\r\n                deleteCommentPromise = Fliplet.DataSources.connect(\r\n                  COMMENTS_DS_ID\r\n                ).then(connection => {\r\n                  return connection.removeById(comment.id).then(() => {\r\n                    this.comments = this.comments.map((el) => {\r\n                      if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n                        el.threads = el.threads.filter(\r\n                          (el) => el.id !== comment.id\r\n                        );\r\n                      }\r\n\r\n                      return el;\r\n                    });\r\n\r\n                    this.closeToastProgress();\r\n                  });\r\n                });\r\n              } else {\r\n                deleteCommentPromise = Fliplet.DataSources.connect(\r\n                  COMMENTS_DS_ID\r\n                ).then(connection => {\r\n                  return connection\r\n                    .find({ where: { 'Comment GUID': comment.data.GUID } })\r\n                    .then(records => { // All threads for the comment\r\n                      return connection\r\n                        .commit({\r\n                          delete: records.map((el) => el.id),\r\n                          append: true,\r\n                          extend: true\r\n                        })\r\n                        .then(() => {\r\n                          return connection\r\n                            .removeById(comment.id)\r\n                            .then(() => {\r\n                              this.comments = this.comments.filter(\r\n                                (el) => el.id !== comment.id\r\n                              );\r\n                              this.closeToastProgress();\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n              }\r\n\r\n              return deleteCommentPromise;\r\n            });\r\n          }\r\n        },\r\n        mounted() {\r\n          Fliplet.Session.get().then(session => {\r\n            loggedUser = _.get(session, 'entries.dataSource.data');\r\n\r\n            if (loggedUser) {\r\n              this.getComments();\r\n            } else {\r\n              showToastMessage('You need to be logged in to see the comments');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n});\r\n","function _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n  return arr2;\r\n}\r\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\r\nfunction _arrayWithoutHoles(arr) {\r\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\r\n}\r\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\r\nfunction _defineProperty(obj, key, value) {\r\n  key = toPropertyKey(key);\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n  return obj;\r\n}\r\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\r\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\r\n}\r\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\r\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}\r\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\r\nvar iterableToArray = require(\"./iterableToArray.js\");\r\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\r\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\r\nfunction _toConsumableArray(arr) {\r\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\r\n}\r\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\r\nfunction toPrimitive(t, r) {\r\n  if (\"object\" != _typeof(t) || !t) return t;\r\n  var e = t[Symbol.toPrimitive];\r\n  if (void 0 !== e) {\r\n    var i = e.call(t, r || \"default\");\r\n    if (\"object\" != _typeof(i)) return i;\r\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\r\n  }\r\n  return (\"string\" === r ? String : Number)(t);\r\n}\r\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\r\nvar toPrimitive = require(\"./toPrimitive.js\");\r\nfunction toPropertyKey(t) {\r\n  var i = toPrimitive(t, \"string\");\r\n  return \"symbol\" == _typeof(i) ? i : String(i);\r\n}\r\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\r\n  \"@babel/helpers - typeof\";\r\n\r\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\r\n    return typeof o;\r\n  } : function (o) {\r\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\r\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\r\n}\r\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\r\n}\r\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}
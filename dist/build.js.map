{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/libs/build.js"],"names":["Fliplet","Widget","instance","widgetData","DS_COMMENTS","QUERY","Navigate","query","loggedUser","initializeChildren","$el","dataSourceEntryId","showToastMessage","initVue","message","UI","Toast","$","removeClass","then","Vue","el","data","commentInput","comments","computed","commentsLength","methods","consoleComments","console","log","getComments","thisy","entryId","DataSources","connectByName","connection","find","where","records","threads","forEach","userInitials","split","map","name","join","userAvatar","Media","authenticate","flagged","push","showThreads","filter","thread","likedLoginByUser","likes","includes","Email","getTimeFromTimestamp","timestamp","moment","format","getDateFromTimestamp","manageComment","id","text","userFullName","Date","toISOString","mounted","Session","get","session","_"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","Fliplet.Widget.instance('comments', function(widgetData) {\r\n  const DS_COMMENTS = 'Global Comments';\r\n  const QUERY = Fliplet.Navigate.query;\r\n  let loggedUser = null;\r\n\r\n  Fliplet.Widget.initializeChildren(this.$el, this);\r\n\r\n  if (!QUERY.dataSourceEntryId) {\r\n    showToastMessage('No data source entry ID provided');\r\n  }\r\n\r\n  initVue();\r\n  // loggedInUser();\r\n\r\n  // function loggedInUser() {\r\n  //   Fliplet.Session.get().then(function onCachedSessionRetrieved(session) {\r\n  //     loggedUser = _.get(session, 'entries.dataSource.data');\r\n\r\n  //     if (loggedUser) {\r\n  //       initVue();\r\n  //     } else {\r\n  //       showToastMessage('You need to be logged in to see the comments');\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  function showToastMessage(message) {\r\n    return Fliplet.UI.Toast(message);\r\n  }\r\n\r\n  function initVue() {\r\n    $('[name=\"comments\"]').removeClass('hidden');\r\n    Fliplet().then(function() {\r\n      new Vue({\r\n        el: '#app-comments',\r\n        data: {\r\n          commentInput: '',\r\n          message: 'Hello, Vue!',\r\n          comments: [\r\n          // {\r\n          //   id: 1,\r\n          //   liked: true,\r\n          //   likeCount: 5,\r\n          //   data: {\r\n          //     text: 'Comment 1',\r\n          //     userInitials: 'AB',\r\n          //     userFullName: 'Alicia B',\r\n          //     timestamp: '2020-01-01T00:00:00Z',\r\n          //     userAvatar: 'https://variety.com/wp-content/uploads/2020/12/Brad_Pitt.png'\r\n          //   },\r\n          //   threads: []\r\n          // },\r\n          // {\r\n          //   id: 2,\r\n          //   liked: true,\r\n          //   likeCount: 3,\r\n          //   data: {\r\n          //     text: 'Comment 2',\r\n          //     userInitials: 'CD',\r\n          //     userFullName: 'Cory D',\r\n          //     timestamp: '2020-01-02T00:00:00Z',\r\n          //     userAvatar: null\r\n          //   },\r\n          //   threads: [{\r\n          //     id: 2,\r\n          //     liked: true,\r\n          //     likeCount: 3,\r\n          //     data: {\r\n          //       text: 'Comment 2',\r\n          //       userInitials: 'CD',\r\n          //       userFullName: 'Cory D',\r\n          //       timestamp: '2020-01-02T00:00:00Z',\r\n          //       userAvatar: null\r\n          //     }\r\n          //   }]\r\n          // },\r\n          // {\r\n          //   id: 3,\r\n          //   liked: false,\r\n          //   likeCount: 7,\r\n          //   data: {\r\n          //     text: 'Comment 3',\r\n          //     userInitials: 'EF',\r\n          //     userFullName: 'Evan F',\r\n          //     timestamp: '2020-01-03T00:00:00Z',\r\n          //     userAvatar: null\r\n          //   },\r\n          //   threads: [{\r\n          //     id: 3,\r\n          //     liked: false,\r\n          //     likeCount: 0,\r\n          //     data: {\r\n          //       text: 'Comment 3',\r\n          //       userInitials: 'EF',\r\n          //       userFullName: 'Evan F',\r\n          //       timestamp: '2020-01-03T00:00:00Z',\r\n          //       userAvatar: 'https://variety.com/wp-content/uploads/2020/12/Brad_Pitt.png'\r\n          //     }\r\n          //   }]\r\n          // }\r\n          ]\r\n        },\r\n        computed: {\r\n          commentsLength: function() {\r\n            return this.message + ' text';\r\n          }\r\n        // comments() {\r\n        //   return this.commentsData;\r\n        // }\r\n        },\r\n        methods: {\r\n          consoleComments() {\r\n          // console.log(this.commentsData);\r\n            console.log(this.comments);\r\n          },\r\n          getComments() {\r\n            var thisy = this;\r\n            var entryId = '123456'; // Replace with the entry ID from the url\r\n\r\n            Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(connection) {\r\n              return connection.find({ where: { 'Entry Id': entryId } }).then(function(records) {\r\n                var comments = [];\r\n                var threads = [];\r\n\r\n                records.forEach(el => {\r\n                // get after from the user table\r\n                  el.userInitials = (el.data['User Full Name'] || 'John Doe').split(' ').map(name => name[0]).join('');\r\n                  el.userAvatar = el.data['User Avatar'] ? Fliplet.Media.authenticate(el.data['User Avatar']) : null;\r\n                  el.flagged = false;\r\n\r\n                  if (el.data['Comment GUID']) {\r\n                    threads.push(el);\r\n                  } else {\r\n                    comments.push(el);\r\n                  }\r\n                });\r\n                debugger;\r\n                thisy.comments = comments.map(el => {\r\n                  el.showThreads = false;\r\n                  el.threads = threads.filter(thread => thread.data['Comment GUID'] === el.data['GUID']);\r\n\r\n                  return el;\r\n                });\r\n              });\r\n            });\r\n          },\r\n          likedLoginByUser(likes) {\r\n            return likes.includes(loggedUser.Email); // logged user email\r\n          },\r\n          getTimeFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('HH:mm:ss');\r\n          },\r\n          getDateFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('MM/DD/YYYY');\r\n          },\r\n          manageComment() {\r\n            if (this.commentInput) {\r\n              this.comments.push({\r\n                id: this.commentsLength + 1,\r\n                data: {\r\n                  text: this.commentInput,\r\n                  userInitials: 'AB',\r\n                  userFullName: 'Alicia B',\r\n                  timestamp: new Date().toISOString(),\r\n                  userAvatar: 'https://variety.com/wp-content/uploads/2020/12/Brad_Pitt.png'\r\n                }\r\n              });\r\n              this.commentInput = '';\r\n            }\r\n          }\r\n        },\r\n        mounted() {\r\n          var thisy = this;\r\n\r\n          Fliplet.Session.get().then((session) => {\r\n            loggedUser = _.get(session, 'entries.dataSource.data');\r\n\r\n            if (loggedUser) {\r\n            //  initVue();\r\n              debugger;\r\n              thisy.getComments();\r\n            } else {\r\n              showToastMessage('You need to be logged in to see the comments');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n});\r\n"],"sourceRoot":""}
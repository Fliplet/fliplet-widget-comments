{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/libs/build.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js"],"names":["Fliplet","Widget","instance","widgetData","dataSource","showToastMessage","columnEmail","DS_COMMENTS","DS_USERS","id","QUERY","Navigate","query","EMAIL_COLUMN","USER_PHOTO_COLUMN","columnUserPhoto","FLAGGED_EMAILS","flaggedEmails","FLAGGED_MAIL_CONTENT","flaggedMailContent","loggedUser","EMAILS_TO_NOTIFY_FLAGGED","split","map","el","trim","filter","RegExp","test","dataSourceEntryId","initializeChildren","$el","Env","get","initVue","message","UI","Toast","$","removeClass","then","Vue","data","commentInput","commentState","comments","computed","commentsData","methods","showToastProgress","arguments","length","undefined","position","backdrop","tapToDismiss","duration","closeToastProgress","dismiss","flagComment","comment","thisy","flagged","DataSources","connectByName","connection","update","Flagged","GUID","getExistingEmailsToNotifyAboutFlag","existingEmails","emails","user","options","email","name","type","html","subject","Communicate","batchSendEmail","setTimeout","toggleThreads","showThreads","connect","find","where","_defineProperty","$in","attributes","records","getUserData","userEmails","getComments","entryId","users","threads","forEach","currentUser","userInitials","join","userAvatar","Media","authenticate","openDropdown","push","thread","likedLoginByUser","likes","includes","Email","isLoggedUserOwnerOfComment","getTimeFromTimestamp","timestamp","moment","format","getDateFromTimestamp","manageLike","Likes","clearState","prepareComment","action","Message","manageComment","toInsert","Timestamp","Date","toISOString","insert","record","unshift","deleteComment","isThread","title","labels","confirm","result","console","log","deleteCommentPromise","removeById","commit","append","extend","mounted","Session","session","_"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","Fliplet.Widget.instance('comments', function(widgetData) {\r\n  debugger;\r\n\r\n  if (!widgetData.dataSource) {\r\n    return showToastMessage('Please select Data source');\r\n  }\r\n\r\n  if (!widgetData.columnEmail) {\r\n    return showToastMessage('Please select column for the email');\r\n  }\r\n\r\n  const DS_COMMENTS = 'Global Comments';\r\n  const DS_USERS = widgetData.dataSource.id;\r\n  const QUERY = Fliplet.Navigate.query;\r\n  const EMAIL_COLUMN = widgetData.columnEmail;\r\n  const USER_PHOTO_COLUMN = widgetData.columnUserPhoto;\r\n  const FLAGGED_EMAILS = widgetData.flaggedEmails;\r\n  const FLAGGED_MAIL_CONTENT = widgetData.flaggedMailContent;\r\n  let loggedUser = null;\r\n  const EMAILS_TO_NOTIFY_FLAGGED = !FLAGGED_EMAILS\r\n    ? []\r\n    : FLAGGED_EMAILS.split(',')\r\n      .map((el) => el.trim())\r\n      .filter((el) => RegExp(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/).test(el));\r\n\r\n  if (!QUERY.dataSourceEntryId) {\r\n    showToastMessage('No data source entry ID provided');\r\n  }\r\n\r\n  Fliplet.Widget.initializeChildren(this.$el, this);\r\n\r\n  if (!Fliplet.Env.get('interact')) {\r\n    initVue();\r\n  }\r\n\r\n  function showToastMessage(message) {\r\n    return Fliplet.UI.Toast(message);\r\n  }\r\n\r\n  function initVue() {\r\n    $('[name=\"comments\"]').removeClass('hidden');\r\n    Fliplet().then(() => {\r\n      new Vue({\r\n        el: '#app-comments',\r\n        data: {\r\n          commentInput: '',\r\n          commentState: null,\r\n          message: 'Hello, Vue!',\r\n          comments: []\r\n        },\r\n        computed: {\r\n          commentsData() {\r\n            return this.comments;\r\n          }\r\n        },\r\n        methods: {\r\n          showToastProgress(message = 'Processing') {\r\n            Fliplet.UI.Toast({\r\n              message,\r\n              position: 'center',\r\n              backdrop: true,\r\n              tapToDismiss: false,\r\n              duration: false\r\n            });\r\n          },\r\n          closeToastProgress() {\r\n            Fliplet.UI.Toast.dismiss();\r\n          },\r\n          flagComment(comment) {\r\n            var thisy = this;\r\n\r\n            thisy.showToastProgress('Flagging comment...');\r\n            comment.data.flagged = true;\r\n\r\n            Fliplet.DataSources.connectByName(DS_COMMENTS)\r\n              .then(function(connection) {\r\n                return connection.update(comment.id, {\r\n                  Flagged: comment.data.flagged,\r\n                  GUID: comment.data.GUID\r\n                });\r\n              })\r\n              .then(() => {\r\n                if (EMAILS_TO_NOTIFY_FLAGGED.length) {\r\n                  return thisy\r\n                    .getExistingEmailsToNotifyAboutFlag()\r\n                    .then((existingEmails) => {\r\n                      var emails = existingEmails.map((user) => {\r\n                        return {\r\n                          options: {\r\n                            email: user.data[EMAIL_COLUMN],\r\n                            name: user.data['User Full Name'],\r\n                            type: 'to',\r\n                            html: FLAGGED_MAIL_CONTENT,\r\n                            subject: 'Comment flagged'\r\n                          // from_name: 'Example Name'\r\n                          }\r\n                        };\r\n                      });\r\n\r\n                      Fliplet.Communicate.batchSendEmail(emails);\r\n\r\n                      thisy.closeToastProgress();\r\n                      setTimeout(() => {\r\n                        comment.data.flagged = false;\r\n                      }, 2000);\r\n                    });\r\n                }\r\n              });\r\n          },\r\n          toggleThreads(comment) {\r\n            comment.showThreads = !comment.showThreads;\r\n          },\r\n          getExistingEmailsToNotifyAboutFlag() {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then((connection) =>\r\n                connection.find({\r\n                  where: { [EMAIL_COLUMN]: { $in: EMAILS_TO_NOTIFY_FLAGGED } },\r\n                  attributes: [EMAIL_COLUMN, 'User Full Name']\r\n                })\r\n              )\r\n              .then((records) => records);\r\n          },\r\n          getUserData(userEmails) {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then((connection) =>\r\n                connection.find({\r\n                  where: { [EMAIL_COLUMN]: { $in: userEmails } },\r\n                  attributes: [\r\n                    EMAIL_COLUMN,\r\n                    'User Full Name',\r\n                    USER_PHOTO_COLUMN\r\n                  ]\r\n                })\r\n              )\r\n              .then((records) => records);\r\n          },\r\n          getComments() {\r\n            var thisy = this;\r\n\r\n            thisy.showToastProgress('Loading comments...');\r\n\r\n            var entryId = '123456'; // Replace with the entry ID from the url\r\n\r\n            return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n              connection => {\r\n                return connection\r\n                  .find({ where: { 'Entry Id': entryId } })\r\n                  .then(records => {\r\n                    var userEmails = records.map(\r\n                      (el) => el.data['Author Email']\r\n                    );\r\n\r\n                    return thisy.getUserData(userEmails).then(users => {\r\n                      var comments = [];\r\n                      var threads = [];\r\n\r\n                      records.forEach((el) => {\r\n                        var currentUser = users.find(\r\n                          (user) =>\r\n                            user.data[EMAIL_COLUMN] === el.data['Author Email']\r\n                        );\r\n\r\n                        el.data.userInitials = (\r\n                          currentUser.data['User Full Name'] || ''\r\n                        )\r\n                          .split(' ')\r\n                          .map((name) => name[0])\r\n                          .join('');\r\n                        el.data.userAvatar = currentUser.data[USER_PHOTO_COLUMN]\r\n                          ? Fliplet.Media.authenticate(\r\n                            currentUser.data[USER_PHOTO_COLUMN]\r\n                          )\r\n                          : null;\r\n                        el.data.flagged = false;\r\n                        el.data.openDropdown = false;\r\n\r\n                        if (el.data['Comment GUID']) {\r\n                          threads.push(el);\r\n                        } else {\r\n                          comments.push(el);\r\n                        }\r\n                      });\r\n\r\n                      thisy.comments = comments.map((el) => {\r\n                        el.showThreads = false;\r\n                        el.threads = threads.filter(\r\n                          (thread) =>\r\n                            thread.data['Comment GUID'] === el.data['GUID']\r\n                        );\r\n\r\n                        return el;\r\n                      });\r\n\r\n                      thisy.closeToastProgress();\r\n                    });\r\n                  });\r\n              }\r\n            );\r\n          },\r\n          likedLoginByUser(likes) {\r\n            return likes.includes(loggedUser.Email);\r\n          },\r\n          isLoggedUserOwnerOfComment(comment) {\r\n            return comment.data['Author Email'] === loggedUser.Email;\r\n          },\r\n          getTimeFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('HH:mm');\r\n          },\r\n          getDateFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('MM/DD/YYYY');\r\n          },\r\n          manageLike(comment) {\r\n            if (this.likedLoginByUser(comment.data.Likes)) {\r\n              comment.data.Likes = comment.data.Likes.filter(\r\n                (el) => el !== loggedUser[EMAIL_COLUMN]\r\n              );\r\n            } else {\r\n              comment.data.Likes.push(loggedUser[EMAIL_COLUMN]);\r\n            }\r\n\r\n            return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n              function(connection) {\r\n                return connection.update(comment.id, {\r\n                  Likes: comment.data.Likes,\r\n                  GUID: comment.data.GUID\r\n                });\r\n              }\r\n            );\r\n          },\r\n          clearState() {\r\n            this.commentState = null;\r\n            this.commentInput = '';\r\n          },\r\n          prepareComment(comment, action) {\r\n            this.commentState = {\r\n              comment,\r\n              action\r\n            };\r\n\r\n            if (action === 'edit') {\r\n              this.commentInput = comment.data.Message;\r\n            }\r\n          },\r\n          manageComment() {\r\n            // todo add showToastProgress for edit/add comment\r\n            var thisy = this;\r\n\r\n            if (thisy.commentInput) {\r\n              thisy.showToastProgress('Adding comment...');\r\n\r\n              if (\r\n                !thisy.commentState\r\n                || thisy.commentState.action === 'reply'\r\n              ) {\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n                  connection\r\n                ) {\r\n                  var toInsert = {\r\n                    Message: thisy.commentInput,\r\n                    'Author Email': loggedUser[EMAIL_COLUMN],\r\n                    Timestamp: new Date().toISOString(),\r\n                    'Entry Id': QUERY.dataSourceEntryId,\r\n                    Likes: []\r\n                  };\r\n\r\n                  if (\r\n                    thisy.commentState\r\n                    && thisy.commentState.action === 'reply'\r\n                  ) {\r\n                    toInsert['Comment GUID']\r\n                      = thisy.commentState.comment.data['GUID'];\r\n                  }\r\n\r\n                  return connection.insert(toInsert).then(function(record) {\r\n                    record.data.userInitials = (\r\n                      loggedUser['User Full Name'] || ''\r\n                    )\r\n                      .split(' ')\r\n                      .map((name) => name[0])\r\n                      .join('');\r\n                    record.data.userAvatar = loggedUser[USER_PHOTO_COLUMN]\r\n                      ? Fliplet.Media.authenticate(\r\n                        loggedUser[USER_PHOTO_COLUMN]\r\n                      )\r\n                      : null;\r\n                    record.data.flagged = false;\r\n                    record.data.openDropdown = false;\r\n                    record.showThreads = false;\r\n                    record.threads = [];\r\n\r\n                    if (\r\n                      thisy.commentState\r\n                      && thisy.commentState.action === 'reply'\r\n                    ) {\r\n                      thisy.comments = thisy.comments.map((el) => {\r\n                        if (\r\n                          el.data['GUID']\r\n                          === thisy.commentState.comment.data['GUID']\r\n                        ) {\r\n                          el.threads.push(record);\r\n                        }\r\n\r\n                        return el;\r\n                      });\r\n                    } else {\r\n                      thisy.comments.unshift(record);\r\n                    }\r\n\r\n                    thisy.closeToastProgress();\r\n                    thisy.commentInput = '';\r\n                    thisy.commentState = null;\r\n                  });\r\n                });\r\n              } else {\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n                  connection\r\n                ) {\r\n                  return connection\r\n                    .update(thisy.commentState.comment.id, {\r\n                      Message: thisy.commentInput,\r\n                      GUID: thisy.commentState.comment.data['GUID']\r\n                    })\r\n                    .then(function() {\r\n                      thisy.comments = thisy.comments.map((el) => {\r\n                        if (el.id === thisy.commentState.comment.id) {\r\n                          el.data.Message = thisy.commentInput;\r\n                        }\r\n                      });\r\n\r\n                      thisy.commentInput = '';\r\n                      thisy.commentState = null;\r\n                      thisy.closeToastProgress();\r\n                    });\r\n                });\r\n              }\r\n            }\r\n          },\r\n          deleteComment(comment, isThread = false) {\r\n            var thisy = this;\r\n            var options = {\r\n              title: 'Delete comment?',\r\n              message: 'Are you sure you want to delete this comment?',\r\n              labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n            };\r\n\r\n            Fliplet.Navigate.confirm(options).then(function(result) {\r\n              if (!result) {\r\n                return console.log('Not confirmed!');\r\n              }\r\n\r\n              thisy.showToastProgress('Deleting comment...');\r\n\r\n              var deleteCommentPromise;\r\n\r\n              if (isThread) {\r\n                deleteCommentPromise = Fliplet.DataSources.connectByName(\r\n                  DS_COMMENTS\r\n                ).then(function(connection) {\r\n                  return connection.removeById(comment.id).then(function() {\r\n                    thisy.comments = thisy.comments.map((el) => {\r\n                      if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n                        el.threads = el.threads.filter(\r\n                          (el) => el.id !== comment.id\r\n                        );\r\n                      }\r\n\r\n                      return el;\r\n                    });\r\n\r\n                    thisy.closeToastProgress();\r\n                  });\r\n                });\r\n              } else {\r\n                deleteCommentPromise = Fliplet.DataSources.connectByName(\r\n                  DS_COMMENTS\r\n                ).then(function(connection) {\r\n                  return connection\r\n                    .find({ where: { 'Comment GUID': comment.data.GUID } })\r\n                    .then(function(records) {\r\n                      return connection\r\n                        .commit({\r\n                          delete: records.map((el) => el.id),\r\n                          append: true,\r\n                          extend: true\r\n                        })\r\n                        .then(function() {\r\n                          return connection\r\n                            .removeById(comment.id)\r\n                            .then(function() {\r\n                              thisy.comments = thisy.comments.filter(\r\n                                (el) => el.id !== comment.id\r\n                              );\r\n                              thisy.closeToastProgress();\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n              }\r\n\r\n              return deleteCommentPromise;\r\n            });\r\n          }\r\n          // deleteComment(comment, isThread = false) {\r\n          //   var thisy = this;\r\n          //   var options = {\r\n          //     title: 'Delete comment?',\r\n          //     message: 'Are you sure you want to delete this comment?',\r\n          //     labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n          //   };\r\n\r\n          //   Fliplet.Navigate.confirm(options)\r\n          //     .then(function(result) {\r\n          //       if (!result) {\r\n          //         return console.log('Not confirmed!');\r\n          //       }\r\n\r\n          //       thisy.showToastProgress('Deleting comment...');\r\n\r\n          //       if (isThread) {\r\n          //         return Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n          //           connection\r\n          //         ) {\r\n          //           return connection.removeById(comment.id).then(function() {\r\n          //             thisy.comments = thisy.comments.map(el => {\r\n          //               if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n          //                 el.threads = el.threads.filter((el) => el.id !== comment.id);\r\n          //               }\r\n\r\n          //               return el;\r\n          //             });\r\n\r\n          //             thisy.closeToastProgress();\r\n          //           });\r\n          //         });\r\n          //       }\r\n\r\n          //       return Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n          //         connection\r\n          //       ) {\r\n          //         return connection.find({ where: { 'Comment GUID': comment.data.GUID } }).then(function(records) {\r\n          //           return connection.commit({\r\n          //             delete: records.map((el) => el.id),\r\n          //             append: true,\r\n          //             extend: true\r\n          //           }).then(function() {\r\n          //             return connection.removeById(comment.id).then(function() {\r\n          //               thisy.comments = thisy.comments.filter((el) => el.id !== comment.id);\r\n          //               thisy.closeToastProgress();\r\n          //             });\r\n          //           });\r\n          //         });\r\n          //       });\r\n          //     });\r\n          // }\r\n        },\r\n        mounted() {\r\n          var thisy = this;\r\n\r\n          Fliplet.Session.get().then((session) => {\r\n            loggedUser = _.get(session, 'entries.dataSource.data');\r\n\r\n            if (loggedUser) {\r\n              thisy.getComments();\r\n            } else {\r\n              showToastMessage('You need to be logged in to see the comments');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n});\r\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}
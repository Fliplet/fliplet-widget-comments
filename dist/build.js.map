{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/libs/build.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"names":["Fliplet","Widget","instance","widgetData","DS_COMMENTS","DS_USERS","dataSource","id","QUERY","Navigate","query","EMAIL_COLUMN","columnEmail","USER_PHOTO_COLUMN","columnUserPhoto","FLAGGED_EMAILS","flaggedEmails","FLAGGED_MAIL_CONTENT","flaggedMailContent","USER_NAMES","userNames","loggedUser","showToastMessage","dataSourceEntryId","EMAILS_TO_NOTIFY_FLAGGED_COMMENT","split","map","el","trim","filter","RegExp","test","initializeChildren","$el","Env","get","initVue","message","UI","Toast","$","removeClass","then","Vue","data","commentInput","commentState","comments","computed","commentsData","methods","showToastProgress","arguments","length","undefined","position","backdrop","tapToDismiss","duration","closeToastProgress","dismiss","flagComment","comment","_this","flagged","DataSources","connectByName","connection","update","Flagged","GUID","getExistingEmailsToNotifyAboutFlag","existingEmails","emails","user","userName","concat","options","to","email","name","type","html","subject","Communicate","batchSendEmail","setTimeout","toggleThreads","showThreads","connect","find","where","_defineProperty","$in","attributes","_toConsumableArray","records","getUserData","userEmails","getComments","_this2","thisy","entryId","users","threads","forEach","currentUser","userInitials","getUserInitials","userAvatar","Media","authenticate","openDropdown","push","thread","userData","join","likedLoginByUser","likes","includes","Email","isLoggedUserOwnerOfComment","getTimeFromTimestamp","timestamp","moment","format","getDateFromTimestamp","manageLike","Likes","clearState","prepareComment","action","Message","manageComment","_this3","toInsert","Timestamp","Date","toISOString","insert","record","unshift","deleteComment","isThread","title","labels","confirm","result","Promise","reject","deleteCommentPromise","removeById","commit","append","extend","mounted","Session","session","_"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","Fliplet.Widget.instance('comments', function(widgetData) {\r\n  const DS_COMMENTS = 'Global Comments';\r\n  const DS_USERS = widgetData.dataSource.id;\r\n  const QUERY = Fliplet.Navigate.query;\r\n  const EMAIL_COLUMN = widgetData.columnEmail;\r\n  const USER_PHOTO_COLUMN = widgetData.columnUserPhoto;\r\n  const FLAGGED_EMAILS = widgetData.flaggedEmails;\r\n  const FLAGGED_MAIL_CONTENT = widgetData.flaggedMailContent;\r\n  const USER_NAMES = widgetData.userNames;\r\n  let loggedUser = null;\r\n\r\n  if (!widgetData.dataSource) {\r\n    return showToastMessage('Please select Data source');\r\n  }\r\n\r\n  if (!widgetData.columnEmail) {\r\n    return showToastMessage('Please select column for the email');\r\n  }\r\n\r\n  if (!USER_NAMES) {\r\n    return showToastMessage('Please select user names');\r\n  }\r\n\r\n  if (!QUERY.dataSourceEntryId) {\r\n    return showToastMessage('No data source entry ID provided');\r\n  }\r\n\r\n  debugger;\r\n  const EMAILS_TO_NOTIFY_FLAGGED_COMMENT = !FLAGGED_EMAILS\r\n    ? []\r\n    : FLAGGED_EMAILS.split(',')\r\n      .map((el) => el.trim())\r\n      .filter((el) => RegExp(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/).test(el));\r\n\r\n  Fliplet.Widget.initializeChildren(this.$el, this);\r\n\r\n  if (!Fliplet.Env.get('interact')) {\r\n    initVue();\r\n  }\r\n\r\n  function showToastMessage(message) {\r\n    return Fliplet.UI.Toast(message);\r\n  }\r\n\r\n  function initVue() {\r\n    $('[name=\"comments\"]').removeClass('hidden');\r\n    Fliplet().then(() => {\r\n      new Vue({\r\n        el: '#app-comments',\r\n        data: {\r\n          commentInput: '',\r\n          commentState: null,\r\n          message: 'Hello, Vue!',\r\n          comments: []\r\n        },\r\n        computed: {\r\n          commentsData() {\r\n            return this.comments;\r\n          }\r\n        },\r\n        methods: {\r\n          showToastProgress(message = 'Processing') {\r\n            Fliplet.UI.Toast({\r\n              message,\r\n              position: 'center',\r\n              backdrop: true,\r\n              tapToDismiss: false,\r\n              duration: false\r\n            });\r\n          },\r\n          closeToastProgress() {\r\n            Fliplet.UI.Toast.dismiss();\r\n          },\r\n          flagComment(comment) {\r\n            this.showToastProgress('Flagging comment...');\r\n            comment.data.flagged = true;\r\n\r\n            Fliplet.DataSources.connectByName(DS_COMMENTS)\r\n              .then(connection => {\r\n                return connection.update(comment.id, {\r\n                  Flagged: comment.data.flagged,\r\n                  GUID: comment.data.GUID\r\n                });\r\n              })\r\n              .then(() => {\r\n                if (EMAILS_TO_NOTIFY_FLAGGED_COMMENT.length) {\r\n                  return this\r\n                    .getExistingEmailsToNotifyAboutFlag()\r\n                    .then(existingEmails => {\r\n                      let emails = existingEmails.map((user) => {\r\n                        var userName = '';\r\n\r\n                        if (USER_NAMES.length === 1) {\r\n                          userName = user.data[USER_NAMES[0]];\r\n                        } else if (USER_NAMES.length === 2) {\r\n                          userName = `${user.data[USER_NAMES[0]]} ${user.data[USER_NAMES[1]]}`;\r\n                        }\r\n\r\n                        return {\r\n                          options: {\r\n                            to: [\r\n                              { email: user.data[EMAIL_COLUMN], name: userName, type: 'to' },\r\n                              { email: 'jane@example.org', name: 'Jane', type: 'cc' }\r\n                            ],\r\n                            html: FLAGGED_MAIL_CONTENT,\r\n                            subject: 'Comment flagged'\r\n                          // from_name: 'Example Name'\r\n                          }\r\n                        };\r\n                      });\r\n\r\n                      return Fliplet.Communicate.batchSendEmail(emails).then(() => {\r\n                        this.closeToastProgress();\r\n                        setTimeout(() => {\r\n                          comment.data.flagged = false;\r\n                        }, 2000);\r\n                      });\r\n                    });\r\n                }\r\n              });\r\n          },\r\n          toggleThreads(comment) {\r\n            comment.showThreads = !comment.showThreads;\r\n          },\r\n          getExistingEmailsToNotifyAboutFlag() {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then(connection =>\r\n                connection.find({\r\n                  where: { [EMAIL_COLUMN]: { $in: EMAILS_TO_NOTIFY_FLAGGED_COMMENT } },\r\n                  attributes: [EMAIL_COLUMN, ...USER_NAMES]\r\n                })\r\n              )\r\n              .then((records) => records);\r\n          },\r\n          getUserData(userEmails) {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then(connection =>\r\n                connection.find({\r\n                  where: { [EMAIL_COLUMN]: { $in: userEmails } },\r\n                  attributes: [\r\n                    EMAIL_COLUMN,\r\n                    ...USER_NAMES,\r\n                    USER_PHOTO_COLUMN\r\n                  ]\r\n                })\r\n              )\r\n              .then(records => records);\r\n          },\r\n          getComments() {\r\n            let thisy = this;\r\n\r\n            thisy.showToastProgress('Loading comments...');\r\n\r\n            let entryId = QUERY.dataSourceEntryId;\r\n\r\n            return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n              connection => {\r\n                return connection\r\n                  .find({ where: { 'Entry Id': entryId } })\r\n                  .then(records => {\r\n                    let userEmails = records.map(\r\n                      (el) => el.data['Author Email']\r\n                    );\r\n\r\n                    return thisy.getUserData(userEmails).then(users => {\r\n                      let comments = [];\r\n                      let threads = [];\r\n\r\n                      records.forEach((el) => {\r\n                        let currentUser = users.find(\r\n                          (user) =>\r\n                            user.data[EMAIL_COLUMN] === el.data['Author Email']\r\n                        );\r\n\r\n                        el.data.userInitials = this.getUserInitials(currentUser.data);\r\n                        el.data.userAvatar = currentUser.data[USER_PHOTO_COLUMN]\r\n                          ? Fliplet.Media.authenticate(\r\n                            currentUser.data[USER_PHOTO_COLUMN]\r\n                          )\r\n                          : null;\r\n                        el.data.flagged = false;\r\n                        el.data.openDropdown = false;\r\n\r\n                        if (el.data['Comment GUID']) {\r\n                          threads.push(el);\r\n                        } else {\r\n                          comments.push(el);\r\n                        }\r\n                      });\r\n\r\n                      thisy.comments = comments.map((el) => {\r\n                        el.showThreads = false;\r\n                        el.threads = threads.filter(\r\n                          (thread) =>\r\n                            thread.data['Comment GUID'] === el.data['GUID']\r\n                        );\r\n\r\n                        return el;\r\n                      });\r\n\r\n                      thisy.closeToastProgress();\r\n                    });\r\n                  });\r\n              }\r\n            );\r\n          },\r\n          getUserInitials(userData) {\r\n            let userInitials = '';\r\n\r\n            if (USER_NAMES.length === 1) {\r\n              userInitials = (\r\n                userData[USER_NAMES[0]] || ''\r\n              )\r\n                .split(' ')\r\n                .map((name) => name[0])\r\n                .join('');\r\n            } else if (USER_NAMES.length === 2) {\r\n              userInitials = USER_NAMES.map((el) => userData[el] ? userData[el][0] : '').join('');\r\n            }\r\n\r\n            return userInitials;\r\n          },\r\n          likedLoginByUser(likes) {\r\n            return likes.includes(loggedUser.Email);\r\n          },\r\n          isLoggedUserOwnerOfComment(comment) {\r\n            return comment.data['Author Email'] === loggedUser.Email;\r\n          },\r\n          getTimeFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('HH:mm');\r\n          },\r\n          getDateFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('MM/DD/YYYY');\r\n          },\r\n          manageLike(comment) {\r\n            if (this.likedLoginByUser(comment.data.Likes)) {\r\n              comment.data.Likes = comment.data.Likes.filter(\r\n                (el) => el !== loggedUser[EMAIL_COLUMN]\r\n              );\r\n            } else {\r\n              comment.data.Likes.push(loggedUser[EMAIL_COLUMN]);\r\n            }\r\n\r\n            return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n              connection => {\r\n                return connection.update(comment.id, {\r\n                  Likes: comment.data.Likes,\r\n                  GUID: comment.data.GUID\r\n                });\r\n              }\r\n            );\r\n          },\r\n          clearState() {\r\n            this.commentState = null;\r\n            this.commentInput = '';\r\n          },\r\n          prepareComment(comment, action) {\r\n            this.commentState = {\r\n              comment,\r\n              action\r\n            };\r\n\r\n            if (action === 'edit') {\r\n              this.commentInput = comment.data.Message;\r\n            }\r\n          },\r\n          manageComment() {\r\n            if (this.commentInput) {\r\n              if (\r\n                !this.commentState\r\n                || this.commentState.action === 'reply'\r\n              ) {\r\n                this.showToastProgress('Adding comment...');\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS).then(connection => {\r\n                  let toInsert = {\r\n                    Message: this.commentInput,\r\n                    'Author Email': loggedUser[EMAIL_COLUMN],\r\n                    Timestamp: new Date().toISOString(),\r\n                    'Entry Id': QUERY.dataSourceEntryId,\r\n                    Likes: []\r\n                  };\r\n\r\n                  if (\r\n                    this.commentState\r\n                    && this.commentState.action === 'reply'\r\n                  ) {\r\n                    toInsert['Comment GUID']\r\n                      = this.commentState.comment.data['GUID'];\r\n                  }\r\n\r\n                  return connection.insert(toInsert).then(record => {\r\n                    record.data.userInitials = this.getUserInitials(loggedUser);\r\n                    record.data.flagged = false;\r\n                    record.data.openDropdown = false;\r\n                    record.showThreads = false;\r\n                    record.threads = [];\r\n\r\n                    if (\r\n                      this.commentState\r\n                      && this.commentState.action === 'reply'\r\n                    ) {\r\n                      this.comments = this.comments.map((el) => {\r\n                        if (\r\n                          el.data['GUID']\r\n                          === this.commentState.comment.data['GUID']\r\n                        ) {\r\n                          el.threads.push(record);\r\n                        }\r\n\r\n                        return el;\r\n                      });\r\n                    } else {\r\n                      this.comments.unshift(record);\r\n                    }\r\n\r\n                    this.closeToastProgress();\r\n                    this.commentInput = '';\r\n                    this.commentState = null;\r\n                  });\r\n                });\r\n              } else {\r\n                this.showToastProgress('Updating comment...');\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS).then(connection => {\r\n                  return connection\r\n                    .update(this.commentState.comment.id, {\r\n                      Message: this.commentInput,\r\n                      GUID: this.commentState.comment.data['GUID']\r\n                    })\r\n                    .then(() => {\r\n                      this.comments = this.comments.map((el) => {\r\n                        if (el.id === this.commentState.comment.id) {\r\n                          el.data.Message = this.commentInput;\r\n                        }\r\n                      });\r\n\r\n                      this.commentInput = '';\r\n                      this.commentState = null;\r\n                      this.closeToastProgress();\r\n                    });\r\n                });\r\n              }\r\n            }\r\n          },\r\n          deleteComment(comment, isThread = false) {\r\n            let message = 'Are you sure you want to delete this comment? Note that all the threads and likes will be deleted as well.';\r\n\r\n            if (isThread) {\r\n              message = 'Are you sure you want to delete this thread? Note that all the likes will be deleted as well.';\r\n            }\r\n\r\n            let thisy = this;\r\n            let options = {\r\n              title: 'Delete comment?',\r\n              message,\r\n              labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n            };\r\n\r\n            Fliplet.Navigate.confirm(options).then(result => {\r\n              if (!result) {\r\n                return Promise.reject(''); // Not confirmed!\r\n              }\r\n\r\n              thisy.showToastProgress('Deleting comment...');\r\n\r\n              let deleteCommentPromise;\r\n\r\n              if (isThread) {\r\n                deleteCommentPromise = Fliplet.DataSources.connectByName(\r\n                  DS_COMMENTS\r\n                ).then(connection => {\r\n                  return connection.removeById(comment.id).then(() => {\r\n                    thisy.comments = thisy.comments.map((el) => {\r\n                      if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n                        el.threads = el.threads.filter(\r\n                          (el) => el.id !== comment.id\r\n                        );\r\n                      }\r\n\r\n                      return el;\r\n                    });\r\n\r\n                    thisy.closeToastProgress();\r\n                  });\r\n                });\r\n              } else {\r\n                deleteCommentPromise = Fliplet.DataSources.connectByName(\r\n                  DS_COMMENTS\r\n                ).then(connection => {\r\n                  return connection\r\n                    .find({ where: { 'Comment GUID': comment.data.GUID } })\r\n                    .then(records => {\r\n                      return connection\r\n                        .commit({\r\n                          delete: records.map((el) => el.id),\r\n                          append: true,\r\n                          extend: true\r\n                        })\r\n                        .then(() => {\r\n                          return connection\r\n                            .removeById(comment.id)\r\n                            .then(() => {\r\n                              thisy.comments = thisy.comments.filter(\r\n                                (el) => el.id !== comment.id\r\n                              );\r\n                              thisy.closeToastProgress();\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n              }\r\n\r\n              return deleteCommentPromise;\r\n            });\r\n          }\r\n        },\r\n        mounted() {\r\n          let thisy = this;\r\n\r\n          Fliplet.Session.get().then((session) => {\r\n            loggedUser = _.get(session, 'entries.dataSource.data');\r\n\r\n            if (loggedUser) {\r\n              thisy.getComments();\r\n            } else {\r\n              showToastMessage('You need to be logged in to see the comments');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n});\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}
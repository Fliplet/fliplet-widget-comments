{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/libs/build.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack:///./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["Fliplet","Widget","instance","name","render","template","ready","_ready","_asyncToGenerator","_regeneratorRuntime","mark","_callee","widgetData","DS_COMMENTS","DS_USERS","QUERY","EMAIL_COLUMN","USER_PHOTO_COLUMN","FLAGGED_EMAILS","FLAGGED_MAIL_CONTENT","loggedUser","EMAILS_TO_NOTIFY_FLAGGED","showToastMessage","initVue","wrap","_callee$","_context","prev","next","_initVue","$","removeClass","then","Vue","el","data","commentInput","commentState","message","comments","computed","commentsData","methods","showToastProgress","arguments","length","undefined","UI","Toast","position","backdrop","tapToDismiss","duration","closeToastProgress","dismiss","flagComment","comment","thisy","flagged","DataSources","connectByName","connection","update","id","Flagged","GUID","getExistingEmailsToNotifyAboutFlag","existingEmails","emails","map","user","options","email","type","html","subject","Communicate","batchSendEmail","setTimeout","toggleThreads","showThreads","connect","find","where","_defineProperty","$in","attributes","records","getUserData","userEmails","getComments","entryId","users","threads","forEach","currentUser","userInitials","split","join","userAvatar","Media","authenticate","openDropdown","push","filter","thread","likedLoginByUser","likes","includes","Email","isLoggedUserOwnerOfComment","getTimeFromTimestamp","timestamp","moment","format","getDateFromTimestamp","manageLike","Likes","clearState","prepareComment","action","Message","manageComment","toInsert","Timestamp","Date","toISOString","dataSourceEntryId","insert","record","unshift","deleteComment","isThread","title","labels","Navigate","confirm","result","console","log","deleteCommentPromise","removeById","commit","append","extend","mounted","Session","get","session","_","_showToastMessage","dataSource","abrupt","columnEmail","fields","assign","columnUserPhoto","redirectEndScreen","flaggedEmails","flaggedMailContent","query","trim","RegExp","test","initializeChildren","$el","Env","stop","apply"],"mappings":"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jD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa;AACboCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA,KAAK;AACL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,mH;;;;;;;;;;;AC/SA,cAAc,mBAAO,CAAC,oEAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2G;;;;;;;;;;;ACXA,cAAc,mBAAO,CAAC,oEAAa;AACnC,kBAAkB,mBAAO,CAAC,8EAAkB;AAC5C;AACA;AACA;AACA;AACA,6G;;;;;;;;;;;ACNA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,uG;;;;;;;;;;;ACTA;;AAEA,cAAc,mBAAO,CAAC,kGAA+B;AACrD;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","Fliplet.Widget.instance({\r\n  name: 'Comments',\r\n  render: {\r\n    template: '',\r\n    ready: async function() {\r\n      var widgetData = this;\r\n\r\n      // Fliplet.Widget.instance('comments', function(widgetData) {\r\n      if (!widgetData.dataSource) {\r\n        return showToastMessage('Please select Data source');\r\n      }\r\n\r\n      if (!widgetData.columnEmail) {\r\n        return showToastMessage('Please select column for the email');\r\n      }\r\n\r\n      this.fields = _.assign(\r\n        {\r\n          dataSource: '',\r\n          columnEmail: '',\r\n          columnUserPhoto: '',\r\n          redirectEndScreen: '',\r\n          flaggedEmails: '',\r\n          flaggedMailContent: ''\r\n        },\r\n        this.fields\r\n      );\r\n\r\n      debugger;\r\n      const DS_COMMENTS = 'Global Comments';\r\n      const DS_USERS = widgetData.dataSource.id;\r\n      const QUERY = Fliplet.Navigate.query;\r\n      const EMAIL_COLUMN = widgetData.columnEmail;\r\n      const USER_PHOTO_COLUMN = widgetData.columnUserPhoto;\r\n      const FLAGGED_EMAILS = widgetData.flaggedEmails;\r\n      const FLAGGED_MAIL_CONTENT = widgetData.flaggedMailContent;\r\n      let loggedUser = null;\r\n      const EMAILS_TO_NOTIFY_FLAGGED = !FLAGGED_EMAILS\r\n        ? []\r\n        : FLAGGED_EMAILS.split(',')\r\n          .map((el) => el.trim())\r\n          .filter((el) => RegExp(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/).test(el));\r\n\r\n      debugger;\r\n\r\n      if (!QUERY.dataSourceEntryId) {\r\n        showToastMessage('No data source entry ID provided');\r\n      }\r\n\r\n      Fliplet.Widget.initializeChildren(this.$el, this);\r\n\r\n      if (!Fliplet.Env.get('interact')) {\r\n        initVue();\r\n      }\r\n\r\n      function showToastMessage(message) {\r\n        return Fliplet.UI.Toast(message);\r\n      }\r\n\r\n      function initVue() {\r\n        $('[name=\"comments\"]').removeClass('hidden');\r\n        Fliplet().then(() => {\r\n          new Vue({\r\n            el: '#app-comments',\r\n            data: {\r\n              commentInput: '',\r\n              commentState: null,\r\n              message: 'Hello, Vue!',\r\n              comments: []\r\n            },\r\n            computed: {\r\n              commentsData() {\r\n                return this.comments;\r\n              }\r\n            },\r\n            methods: {\r\n              showToastProgress(message = 'Processing') {\r\n                Fliplet.UI.Toast({\r\n                  message,\r\n                  position: 'center',\r\n                  backdrop: true,\r\n                  tapToDismiss: false,\r\n                  duration: false\r\n                });\r\n              },\r\n              closeToastProgress() {\r\n                Fliplet.UI.Toast.dismiss();\r\n              },\r\n              flagComment(comment) {\r\n                var thisy = this;\r\n\r\n                thisy.showToastProgress('Flagging comment...');\r\n                comment.data.flagged = true;\r\n\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS)\r\n                  .then(function(connection) {\r\n                    return connection.update(comment.id, {\r\n                      Flagged: comment.data.flagged,\r\n                      GUID: comment.data.GUID\r\n                    });\r\n                  })\r\n                  .then(() => {\r\n                    if (EMAILS_TO_NOTIFY_FLAGGED.length) {\r\n                      return thisy\r\n                        .getExistingEmailsToNotifyAboutFlag()\r\n                        .then((existingEmails) => {\r\n                          var emails = existingEmails.map((user) => {\r\n                            return {\r\n                              options: {\r\n                                email: user.data[EMAIL_COLUMN],\r\n                                name: user.data['User Full Name'],\r\n                                type: 'to',\r\n                                html: FLAGGED_MAIL_CONTENT,\r\n                                subject: 'Comment flagged'\r\n                                // from_name: 'Example Name'\r\n                              }\r\n                            };\r\n                          });\r\n\r\n                          Fliplet.Communicate.batchSendEmail(emails);\r\n\r\n                          thisy.closeToastProgress();\r\n                          setTimeout(() => {\r\n                            comment.data.flagged = false;\r\n                          }, 2000);\r\n                        });\r\n                    }\r\n                  });\r\n              },\r\n              toggleThreads(comment) {\r\n                comment.showThreads = !comment.showThreads;\r\n              },\r\n              getExistingEmailsToNotifyAboutFlag() {\r\n                return Fliplet.DataSources.connect(DS_USERS)\r\n                  .then((connection) =>\r\n                    connection.find({\r\n                      where: { [EMAIL_COLUMN]: { $in: EMAILS_TO_NOTIFY_FLAGGED } },\r\n                      attributes: [EMAIL_COLUMN, 'User Full Name']\r\n                    })\r\n                  )\r\n                  .then((records) => records);\r\n              },\r\n              getUserData(userEmails) {\r\n                return Fliplet.DataSources.connect(DS_USERS)\r\n                  .then((connection) =>\r\n                    connection.find({\r\n                      where: { [EMAIL_COLUMN]: { $in: userEmails } },\r\n                      attributes: [\r\n                        EMAIL_COLUMN,\r\n                        'User Full Name',\r\n                        USER_PHOTO_COLUMN\r\n                      ]\r\n                    })\r\n                  )\r\n                  .then((records) => records);\r\n              },\r\n              getComments() {\r\n                var thisy = this;\r\n\r\n                thisy.showToastProgress('Loading comments...');\r\n\r\n                var entryId = '123456'; // Replace with the entry ID from the url\r\n\r\n                return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n                  connection => {\r\n                    return connection\r\n                      .find({ where: { 'Entry Id': entryId } })\r\n                      .then(records => {\r\n                        var userEmails = records.map(\r\n                          (el) => el.data['Author Email']\r\n                        );\r\n\r\n                        return thisy.getUserData(userEmails).then(users => {\r\n                          var comments = [];\r\n                          var threads = [];\r\n\r\n                          records.forEach((el) => {\r\n                            var currentUser = users.find(\r\n                              (user) =>\r\n                                user.data[EMAIL_COLUMN] === el.data['Author Email']\r\n                            );\r\n\r\n                            el.data.userInitials = (\r\n                              currentUser.data['User Full Name'] || ''\r\n                            )\r\n                              .split(' ')\r\n                              .map((name) => name[0])\r\n                              .join('');\r\n                            el.data.userAvatar = currentUser.data[USER_PHOTO_COLUMN]\r\n                              ? Fliplet.Media.authenticate(\r\n                                currentUser.data[USER_PHOTO_COLUMN]\r\n                              )\r\n                              : null;\r\n                            el.data.flagged = false;\r\n                            el.data.openDropdown = false;\r\n\r\n                            if (el.data['Comment GUID']) {\r\n                              threads.push(el);\r\n                            } else {\r\n                              comments.push(el);\r\n                            }\r\n                          });\r\n\r\n                          thisy.comments = comments.map((el) => {\r\n                            el.showThreads = false;\r\n                            el.threads = threads.filter(\r\n                              (thread) =>\r\n                                thread.data['Comment GUID'] === el.data['GUID']\r\n                            );\r\n\r\n                            return el;\r\n                          });\r\n\r\n                          thisy.closeToastProgress();\r\n                        });\r\n                      });\r\n                  }\r\n                );\r\n              },\r\n              likedLoginByUser(likes) {\r\n                return likes.includes(loggedUser.Email);\r\n              },\r\n              isLoggedUserOwnerOfComment(comment) {\r\n                return comment.data['Author Email'] === loggedUser.Email;\r\n              },\r\n              getTimeFromTimestamp: function(timestamp) {\r\n                return moment(timestamp).format('HH:mm');\r\n              },\r\n              getDateFromTimestamp: function(timestamp) {\r\n                return moment(timestamp).format('MM/DD/YYYY');\r\n              },\r\n              manageLike(comment) {\r\n                if (this.likedLoginByUser(comment.data.Likes)) {\r\n                  comment.data.Likes = comment.data.Likes.filter(\r\n                    (el) => el !== loggedUser[EMAIL_COLUMN]\r\n                  );\r\n                } else {\r\n                  comment.data.Likes.push(loggedUser[EMAIL_COLUMN]);\r\n                }\r\n\r\n                return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n                  function(connection) {\r\n                    return connection.update(comment.id, {\r\n                      Likes: comment.data.Likes,\r\n                      GUID: comment.data.GUID\r\n                    });\r\n                  }\r\n                );\r\n              },\r\n              clearState() {\r\n                this.commentState = null;\r\n                this.commentInput = '';\r\n              },\r\n              prepareComment(comment, action) {\r\n                this.commentState = {\r\n                  comment,\r\n                  action\r\n                };\r\n\r\n                if (action === 'edit') {\r\n                  this.commentInput = comment.data.Message;\r\n                }\r\n              },\r\n              manageComment() {\r\n                // todo add showToastProgress for edit/add comment\r\n                var thisy = this;\r\n\r\n                if (thisy.commentInput) {\r\n                  thisy.showToastProgress('Adding comment...');\r\n\r\n                  if (\r\n                    !thisy.commentState\r\n                || thisy.commentState.action === 'reply'\r\n                  ) {\r\n                    Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n                      connection\r\n                    ) {\r\n                      var toInsert = {\r\n                        Message: thisy.commentInput,\r\n                        'Author Email': loggedUser[EMAIL_COLUMN],\r\n                        Timestamp: new Date().toISOString(),\r\n                        'Entry Id': QUERY.dataSourceEntryId,\r\n                        Likes: []\r\n                      };\r\n\r\n                      if (\r\n                        thisy.commentState\r\n                    && thisy.commentState.action === 'reply'\r\n                      ) {\r\n                        toInsert['Comment GUID']\r\n                      = thisy.commentState.comment.data['GUID'];\r\n                      }\r\n\r\n                      return connection.insert(toInsert).then(function(record) {\r\n                        record.data.userInitials = (\r\n                          loggedUser['User Full Name'] || ''\r\n                        )\r\n                          .split(' ')\r\n                          .map((name) => name[0])\r\n                          .join('');\r\n                        record.data.userAvatar = loggedUser[USER_PHOTO_COLUMN]\r\n                          ? Fliplet.Media.authenticate(\r\n                            loggedUser[USER_PHOTO_COLUMN]\r\n                          )\r\n                          : null;\r\n                        record.data.flagged = false;\r\n                        record.data.openDropdown = false;\r\n                        record.showThreads = false;\r\n                        record.threads = [];\r\n\r\n                        if (\r\n                          thisy.commentState\r\n                      && thisy.commentState.action === 'reply'\r\n                        ) {\r\n                          thisy.comments = thisy.comments.map((el) => {\r\n                            if (\r\n                              el.data['GUID']\r\n                          === thisy.commentState.comment.data['GUID']\r\n                            ) {\r\n                              el.threads.push(record);\r\n                            }\r\n\r\n                            return el;\r\n                          });\r\n                        } else {\r\n                          thisy.comments.unshift(record);\r\n                        }\r\n\r\n                        thisy.closeToastProgress();\r\n                        thisy.commentInput = '';\r\n                        thisy.commentState = null;\r\n                      });\r\n                    });\r\n                  } else {\r\n                    Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n                      connection\r\n                    ) {\r\n                      return connection\r\n                        .update(thisy.commentState.comment.id, {\r\n                          Message: thisy.commentInput,\r\n                          GUID: thisy.commentState.comment.data['GUID']\r\n                        })\r\n                        .then(function() {\r\n                          thisy.comments = thisy.comments.map((el) => {\r\n                            if (el.id === thisy.commentState.comment.id) {\r\n                              el.data.Message = thisy.commentInput;\r\n                            }\r\n                          });\r\n\r\n                          thisy.commentInput = '';\r\n                          thisy.commentState = null;\r\n                          thisy.closeToastProgress();\r\n                        });\r\n                    });\r\n                  }\r\n                }\r\n              },\r\n              deleteComment(comment, isThread = false) {\r\n                var thisy = this;\r\n                var options = {\r\n                  title: 'Delete comment?',\r\n                  message: 'Are you sure you want to delete this comment?',\r\n                  labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n                };\r\n\r\n                Fliplet.Navigate.confirm(options).then(function(result) {\r\n                  if (!result) {\r\n                    return console.log('Not confirmed!');\r\n                  }\r\n\r\n                  thisy.showToastProgress('Deleting comment...');\r\n\r\n                  var deleteCommentPromise;\r\n\r\n                  if (isThread) {\r\n                    deleteCommentPromise = Fliplet.DataSources.connectByName(\r\n                      DS_COMMENTS\r\n                    ).then(function(connection) {\r\n                      return connection.removeById(comment.id).then(function() {\r\n                        thisy.comments = thisy.comments.map((el) => {\r\n                          if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n                            el.threads = el.threads.filter(\r\n                              (el) => el.id !== comment.id\r\n                            );\r\n                          }\r\n\r\n                          return el;\r\n                        });\r\n\r\n                        thisy.closeToastProgress();\r\n                      });\r\n                    });\r\n                  } else {\r\n                    deleteCommentPromise = Fliplet.DataSources.connectByName(\r\n                      DS_COMMENTS\r\n                    ).then(function(connection) {\r\n                      return connection\r\n                        .find({ where: { 'Comment GUID': comment.data.GUID } })\r\n                        .then(function(records) {\r\n                          return connection\r\n                            .commit({\r\n                              delete: records.map((el) => el.id),\r\n                              append: true,\r\n                              extend: true\r\n                            })\r\n                            .then(function() {\r\n                              return connection\r\n                                .removeById(comment.id)\r\n                                .then(function() {\r\n                                  thisy.comments = thisy.comments.filter(\r\n                                    (el) => el.id !== comment.id\r\n                                  );\r\n                                  thisy.closeToastProgress();\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                  }\r\n\r\n                  return deleteCommentPromise;\r\n                });\r\n              }\r\n              // deleteComment(comment, isThread = false) {\r\n              //   var thisy = this;\r\n              //   var options = {\r\n              //     title: 'Delete comment?',\r\n              //     message: 'Are you sure you want to delete this comment?',\r\n              //     labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n              //   };\r\n\r\n              //   Fliplet.Navigate.confirm(options)\r\n              //     .then(function(result) {\r\n              //       if (!result) {\r\n              //         return console.log('Not confirmed!');\r\n              //       }\r\n\r\n              //       thisy.showToastProgress('Deleting comment...');\r\n\r\n              //       if (isThread) {\r\n              //         return Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n              //           connection\r\n              //         ) {\r\n              //           return connection.removeById(comment.id).then(function() {\r\n              //             thisy.comments = thisy.comments.map(el => {\r\n              //               if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n              //                 el.threads = el.threads.filter((el) => el.id !== comment.id);\r\n              //               }\r\n\r\n              //               return el;\r\n              //             });\r\n\r\n              //             thisy.closeToastProgress();\r\n              //           });\r\n              //         });\r\n              //       }\r\n\r\n              //       return Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n              //         connection\r\n              //       ) {\r\n              //         return connection.find({ where: { 'Comment GUID': comment.data.GUID } }).then(function(records) {\r\n              //           return connection.commit({\r\n              //             delete: records.map((el) => el.id),\r\n              //             append: true,\r\n              //             extend: true\r\n              //           }).then(function() {\r\n              //             return connection.removeById(comment.id).then(function() {\r\n              //               thisy.comments = thisy.comments.filter((el) => el.id !== comment.id);\r\n              //               thisy.closeToastProgress();\r\n              //             });\r\n              //           });\r\n              //         });\r\n              //       });\r\n              //     });\r\n              // }\r\n            },\r\n            mounted() {\r\n              var thisy = this;\r\n\r\n              Fliplet.Session.get().then((session) => {\r\n                loggedUser = _.get(session, 'entries.dataSource.data');\r\n\r\n                if (loggedUser) {\r\n                  thisy.getComments();\r\n                } else {\r\n                  showToastMessage('You need to be logged in to see the comments');\r\n                }\r\n              });\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n});\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/libs/build.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"names":["Fliplet","Widget","instance","widgetData","fields","_","assign","dataSource","userNames","columnEmail","columnUserPhoto","flaggedEmails","flaggedMailContent","showToastMessage","QUERY","dataSourceEntryId","DS_COMMENTS","DS_USERS","id","Navigate","query","EMAIL_COLUMN","USER_PHOTO_COLUMN","FLAGGED_EMAILS","FLAGGED_MAIL_CONTENT","USER_NAMES","loggedUser","EMAILS_TO_NOTIFY_FLAGGED","split","map","el","trim","filter","RegExp","test","initializeChildren","$el","Env","get","initVue","message","UI","Toast","$","removeClass","then","Vue","data","commentInput","commentState","comments","computed","commentsData","methods","showToastProgress","arguments","length","undefined","position","backdrop","tapToDismiss","duration","closeToastProgress","dismiss","flagComment","comment","thisy","flagged","DataSources","connectByName","connection","update","Flagged","GUID","getExistingEmailsToNotifyAboutFlag","existingEmails","emails","user","options","email","name","type","html","subject","Communicate","batchSendEmail","setTimeout","toggleThreads","showThreads","connect","find","where","_defineProperty","$in","attributes","concat","_toConsumableArray","records","getUserData","userEmails","getComments","entryId","users","threads","forEach","currentUser","userInitials","join","userAvatar","Media","authenticate","openDropdown","push","thread","likedLoginByUser","likes","includes","Email","isLoggedUserOwnerOfComment","getTimeFromTimestamp","timestamp","moment","format","getDateFromTimestamp","manageLike","Likes","clearState","prepareComment","action","Message","manageComment","toInsert","Timestamp","Date","toISOString","insert","record","unshift","deleteComment","isThread","title","labels","confirm","result","console","log","deleteCommentPromise","removeById","commit","append","extend","mounted","Session","session"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","Fliplet.Widget.instance('comments', function(widgetData) {\r\n  debugger;\r\n\r\n  widgetData.fields = _.assign(\r\n    {\r\n      dataSource: '',\r\n      userNames: '',\r\n      columnEmail: '',\r\n      columnUserPhoto: '',\r\n      flaggedEmails: '',\r\n      flaggedMailContent: ''\r\n    },\r\n    widgetData.fields\r\n  );\r\n\r\n  if (!widgetData.fields.dataSource) {\r\n    return showToastMessage('Please select Data source');\r\n  }\r\n\r\n  if (!widgetData.fields.columnEmail) {\r\n    return showToastMessage('Please select column for the email');\r\n  }\r\n\r\n  if (!QUERY.dataSourceEntryId) {\r\n    return showToastMessage('No data source entry ID provided');\r\n  }\r\n\r\n  const DS_COMMENTS = 'Global Comments';\r\n  const DS_USERS = widgetData.fields.dataSource.id;\r\n  const QUERY = Fliplet.Navigate.query;\r\n  const EMAIL_COLUMN = widgetData.fields.columnEmail;\r\n  const USER_PHOTO_COLUMN = widgetData.fields.columnUserPhoto;\r\n  const FLAGGED_EMAILS = widgetData.fields.flaggedEmails;\r\n  const FLAGGED_MAIL_CONTENT = widgetData.fields.flaggedMailContent;\r\n  const USER_NAMES = widgetData.fields.userNames;\r\n  let loggedUser = null;\r\n\r\n  if (!USER_NAMES) {\r\n    return showToastMessage('Please select user names');\r\n  }\r\n\r\n  debugger;\r\n  const EMAILS_TO_NOTIFY_FLAGGED = !FLAGGED_EMAILS\r\n    ? []\r\n    : FLAGGED_EMAILS.split(',')\r\n      .map((el) => el.trim())\r\n      .filter((el) => RegExp(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/).test(el));\r\n\r\n  Fliplet.Widget.initializeChildren(this.$el, this);\r\n\r\n  if (!Fliplet.Env.get('interact')) {\r\n    initVue();\r\n  }\r\n\r\n  function showToastMessage(message) {\r\n    return Fliplet.UI.Toast(message);\r\n  }\r\n\r\n  function initVue() {\r\n    $('[name=\"comments\"]').removeClass('hidden');\r\n    Fliplet().then(() => {\r\n      new Vue({\r\n        el: '#app-comments',\r\n        data: {\r\n          commentInput: '',\r\n          commentState: null,\r\n          message: 'Hello, Vue!',\r\n          comments: []\r\n        },\r\n        computed: {\r\n          commentsData() {\r\n            return this.comments;\r\n          }\r\n        },\r\n        methods: {\r\n          showToastProgress(message = 'Processing') {\r\n            Fliplet.UI.Toast({\r\n              message,\r\n              position: 'center',\r\n              backdrop: true,\r\n              tapToDismiss: false,\r\n              duration: false\r\n            });\r\n          },\r\n          closeToastProgress() {\r\n            Fliplet.UI.Toast.dismiss();\r\n          },\r\n          flagComment(comment) {\r\n            var thisy = this;\r\n\r\n            thisy.showToastProgress('Flagging comment...');\r\n            comment.data.flagged = true;\r\n\r\n            Fliplet.DataSources.connectByName(DS_COMMENTS)\r\n              .then(function(connection) {\r\n                return connection.update(comment.id, {\r\n                  Flagged: comment.data.flagged,\r\n                  GUID: comment.data.GUID\r\n                });\r\n              })\r\n              .then(() => {\r\n                if (EMAILS_TO_NOTIFY_FLAGGED.length) {\r\n                  return thisy\r\n                    .getExistingEmailsToNotifyAboutFlag()\r\n                    .then((existingEmails) => {\r\n                      var emails = existingEmails.map((user) => {\r\n                        return {\r\n                          options: {\r\n                            email: user.data[EMAIL_COLUMN],\r\n                            name: user.data['User Full Name'],\r\n                            type: 'to',\r\n                            html: FLAGGED_MAIL_CONTENT,\r\n                            subject: 'Comment flagged'\r\n                          // from_name: 'Example Name'\r\n                          }\r\n                        };\r\n                      });\r\n\r\n                      Fliplet.Communicate.batchSendEmail(emails);\r\n\r\n                      thisy.closeToastProgress();\r\n                      setTimeout(() => {\r\n                        comment.data.flagged = false;\r\n                      }, 2000);\r\n                    });\r\n                }\r\n              });\r\n          },\r\n          toggleThreads(comment) {\r\n            comment.showThreads = !comment.showThreads;\r\n          },\r\n          getExistingEmailsToNotifyAboutFlag() {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then((connection) =>\r\n                connection.find({\r\n                  where: { [EMAIL_COLUMN]: { $in: EMAILS_TO_NOTIFY_FLAGGED } },\r\n                  attributes: [EMAIL_COLUMN, ...USER_NAMES]\r\n                })\r\n              )\r\n              .then((records) => records);\r\n          },\r\n          getUserData(userEmails) {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then((connection) =>\r\n                connection.find({\r\n                  where: { [EMAIL_COLUMN]: { $in: userEmails } },\r\n                  attributes: [\r\n                    EMAIL_COLUMN,\r\n                    ...USER_NAMES,\r\n                    USER_PHOTO_COLUMN\r\n                  ]\r\n                })\r\n              )\r\n              .then((records) => records);\r\n          },\r\n          getComments() {\r\n            var thisy = this;\r\n\r\n            thisy.showToastProgress('Loading comments...');\r\n\r\n            var entryId = '123456'; // Replace with the entry ID from the url\r\n\r\n            return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n              connection => {\r\n                return connection\r\n                  .find({ where: { 'Entry Id': entryId } })\r\n                  .then(records => {\r\n                    var userEmails = records.map(\r\n                      (el) => el.data['Author Email']\r\n                    );\r\n\r\n                    return thisy.getUserData(userEmails).then(users => {\r\n                      var comments = [];\r\n                      var threads = [];\r\n\r\n                      records.forEach((el) => {\r\n                        var currentUser = users.find(\r\n                          (user) =>\r\n                            user.data[EMAIL_COLUMN] === el.data['Author Email']\r\n                        );\r\n\r\n                        var userInitials = '';\r\n\r\n                        if (USER_NAMES.length === 1) {\r\n                          userInitials = (\r\n                            currentUser.data[USER_NAMES[0]] || ''\r\n                          )\r\n                            .split(' ')\r\n                            .map((name) => name[0])\r\n                            .join('');\r\n                        } else if (USER_NAMES.length === 2) {\r\n                          userInitials = USER_NAMES.map((el) => currentUser.data[el] ? currentUser.data[el][0] : '').join('');\r\n                        }\r\n\r\n                        el.data.userInitials = userInitials;\r\n                        el.data.userAvatar = currentUser.data[USER_PHOTO_COLUMN]\r\n                          ? Fliplet.Media.authenticate(\r\n                            currentUser.data[USER_PHOTO_COLUMN]\r\n                          )\r\n                          : null;\r\n                        el.data.flagged = false;\r\n                        el.data.openDropdown = false;\r\n\r\n                        if (el.data['Comment GUID']) {\r\n                          threads.push(el);\r\n                        } else {\r\n                          comments.push(el);\r\n                        }\r\n                      });\r\n\r\n                      thisy.comments = comments.map((el) => {\r\n                        el.showThreads = false;\r\n                        el.threads = threads.filter(\r\n                          (thread) =>\r\n                            thread.data['Comment GUID'] === el.data['GUID']\r\n                        );\r\n\r\n                        return el;\r\n                      });\r\n\r\n                      thisy.closeToastProgress();\r\n                    });\r\n                  });\r\n              }\r\n            );\r\n          },\r\n          likedLoginByUser(likes) {\r\n            return likes.includes(loggedUser.Email);\r\n          },\r\n          isLoggedUserOwnerOfComment(comment) {\r\n            return comment.data['Author Email'] === loggedUser.Email;\r\n          },\r\n          getTimeFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('HH:mm');\r\n          },\r\n          getDateFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('MM/DD/YYYY');\r\n          },\r\n          manageLike(comment) {\r\n            if (this.likedLoginByUser(comment.data.Likes)) {\r\n              comment.data.Likes = comment.data.Likes.filter(\r\n                (el) => el !== loggedUser[EMAIL_COLUMN]\r\n              );\r\n            } else {\r\n              comment.data.Likes.push(loggedUser[EMAIL_COLUMN]);\r\n            }\r\n\r\n            return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n              function(connection) {\r\n                return connection.update(comment.id, {\r\n                  Likes: comment.data.Likes,\r\n                  GUID: comment.data.GUID\r\n                });\r\n              }\r\n            );\r\n          },\r\n          clearState() {\r\n            this.commentState = null;\r\n            this.commentInput = '';\r\n          },\r\n          prepareComment(comment, action) {\r\n            this.commentState = {\r\n              comment,\r\n              action\r\n            };\r\n\r\n            if (action === 'edit') {\r\n              this.commentInput = comment.data.Message;\r\n            }\r\n          },\r\n          manageComment() {\r\n            // todo add showToastProgress for edit/add comment\r\n            var thisy = this;\r\n\r\n            if (thisy.commentInput) {\r\n              thisy.showToastProgress('Adding comment...');\r\n\r\n              if (\r\n                !thisy.commentState\r\n                || thisy.commentState.action === 'reply'\r\n              ) {\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n                  connection\r\n                ) {\r\n                  var toInsert = {\r\n                    Message: thisy.commentInput,\r\n                    'Author Email': loggedUser[EMAIL_COLUMN],\r\n                    Timestamp: new Date().toISOString(),\r\n                    'Entry Id': QUERY.dataSourceEntryId,\r\n                    Likes: []\r\n                  };\r\n\r\n                  if (\r\n                    thisy.commentState\r\n                    && thisy.commentState.action === 'reply'\r\n                  ) {\r\n                    toInsert['Comment GUID']\r\n                      = thisy.commentState.comment.data['GUID'];\r\n                  }\r\n\r\n                  return connection.insert(toInsert).then(function(record) {\r\n                    record.data.userInitials = (\r\n                      loggedUser['User Full Name'] || ''\r\n                    )\r\n                      .split(' ')\r\n                      .map((name) => name[0])\r\n                      .join('');\r\n                    record.data.userAvatar = loggedUser[USER_PHOTO_COLUMN]\r\n                      ? Fliplet.Media.authenticate(\r\n                        loggedUser[USER_PHOTO_COLUMN]\r\n                      )\r\n                      : null;\r\n                    record.data.flagged = false;\r\n                    record.data.openDropdown = false;\r\n                    record.showThreads = false;\r\n                    record.threads = [];\r\n\r\n                    if (\r\n                      thisy.commentState\r\n                      && thisy.commentState.action === 'reply'\r\n                    ) {\r\n                      thisy.comments = thisy.comments.map((el) => {\r\n                        if (\r\n                          el.data['GUID']\r\n                          === thisy.commentState.comment.data['GUID']\r\n                        ) {\r\n                          el.threads.push(record);\r\n                        }\r\n\r\n                        return el;\r\n                      });\r\n                    } else {\r\n                      thisy.comments.unshift(record);\r\n                    }\r\n\r\n                    thisy.closeToastProgress();\r\n                    thisy.commentInput = '';\r\n                    thisy.commentState = null;\r\n                  });\r\n                });\r\n              } else {\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n                  connection\r\n                ) {\r\n                  return connection\r\n                    .update(thisy.commentState.comment.id, {\r\n                      Message: thisy.commentInput,\r\n                      GUID: thisy.commentState.comment.data['GUID']\r\n                    })\r\n                    .then(function() {\r\n                      thisy.comments = thisy.comments.map((el) => {\r\n                        if (el.id === thisy.commentState.comment.id) {\r\n                          el.data.Message = thisy.commentInput;\r\n                        }\r\n                      });\r\n\r\n                      thisy.commentInput = '';\r\n                      thisy.commentState = null;\r\n                      thisy.closeToastProgress();\r\n                    });\r\n                });\r\n              }\r\n            }\r\n          },\r\n          deleteComment(comment, isThread = false) {\r\n            var thisy = this;\r\n            var options = {\r\n              title: 'Delete comment?',\r\n              message: 'Are you sure you want to delete this comment?',\r\n              labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n            };\r\n\r\n            Fliplet.Navigate.confirm(options).then(function(result) {\r\n              if (!result) {\r\n                return console.log('Not confirmed!');\r\n              }\r\n\r\n              thisy.showToastProgress('Deleting comment...');\r\n\r\n              var deleteCommentPromise;\r\n\r\n              if (isThread) {\r\n                deleteCommentPromise = Fliplet.DataSources.connectByName(\r\n                  DS_COMMENTS\r\n                ).then(function(connection) {\r\n                  return connection.removeById(comment.id).then(function() {\r\n                    thisy.comments = thisy.comments.map((el) => {\r\n                      if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n                        el.threads = el.threads.filter(\r\n                          (el) => el.id !== comment.id\r\n                        );\r\n                      }\r\n\r\n                      return el;\r\n                    });\r\n\r\n                    thisy.closeToastProgress();\r\n                  });\r\n                });\r\n              } else {\r\n                deleteCommentPromise = Fliplet.DataSources.connectByName(\r\n                  DS_COMMENTS\r\n                ).then(function(connection) {\r\n                  return connection\r\n                    .find({ where: { 'Comment GUID': comment.data.GUID } })\r\n                    .then(function(records) {\r\n                      return connection\r\n                        .commit({\r\n                          delete: records.map((el) => el.id),\r\n                          append: true,\r\n                          extend: true\r\n                        })\r\n                        .then(function() {\r\n                          return connection\r\n                            .removeById(comment.id)\r\n                            .then(function() {\r\n                              thisy.comments = thisy.comments.filter(\r\n                                (el) => el.id !== comment.id\r\n                              );\r\n                              thisy.closeToastProgress();\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n              }\r\n\r\n              return deleteCommentPromise;\r\n            });\r\n          }\r\n          // deleteComment(comment, isThread = false) {\r\n          //   var thisy = this;\r\n          //   var options = {\r\n          //     title: 'Delete comment?',\r\n          //     message: 'Are you sure you want to delete this comment?',\r\n          //     labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n          //   };\r\n\r\n          //   Fliplet.Navigate.confirm(options)\r\n          //     .then(function(result) {\r\n          //       if (!result) {\r\n          //         return console.log('Not confirmed!');\r\n          //       }\r\n\r\n          //       thisy.showToastProgress('Deleting comment...');\r\n\r\n          //       if (isThread) {\r\n          //         return Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n          //           connection\r\n          //         ) {\r\n          //           return connection.removeById(comment.id).then(function() {\r\n          //             thisy.comments = thisy.comments.map(el => {\r\n          //               if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n          //                 el.threads = el.threads.filter((el) => el.id !== comment.id);\r\n          //               }\r\n\r\n          //               return el;\r\n          //             });\r\n\r\n          //             thisy.closeToastProgress();\r\n          //           });\r\n          //         });\r\n          //       }\r\n\r\n          //       return Fliplet.DataSources.connectByName(DS_COMMENTS).then(function(\r\n          //         connection\r\n          //       ) {\r\n          //         return connection.find({ where: { 'Comment GUID': comment.data.GUID } }).then(function(records) {\r\n          //           return connection.commit({\r\n          //             delete: records.map((el) => el.id),\r\n          //             append: true,\r\n          //             extend: true\r\n          //           }).then(function() {\r\n          //             return connection.removeById(comment.id).then(function() {\r\n          //               thisy.comments = thisy.comments.filter((el) => el.id !== comment.id);\r\n          //               thisy.closeToastProgress();\r\n          //             });\r\n          //           });\r\n          //         });\r\n          //       });\r\n          //     });\r\n          // }\r\n        },\r\n        mounted() {\r\n          var thisy = this;\r\n\r\n          Fliplet.Session.get().then((session) => {\r\n            loggedUser = _.get(session, 'entries.dataSource.data');\r\n\r\n            if (loggedUser) {\r\n              thisy.getComments();\r\n            } else {\r\n              showToastMessage('You need to be logged in to see the comments');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n});\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}
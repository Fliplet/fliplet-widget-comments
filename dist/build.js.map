{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/libs/build.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"names":["Fliplet","Widget","instance","widgetData","DS_COMMENTS","DS_USERS","userDataSource","id","QUERY","Navigate","query","EMAIL_COLUMN","columnEmail","USER_PHOTO_COLUMN","columnUserPhoto","FLAGGED_EMAILS","flaggedEmails","FLAGGED_MAIL_CONTENT","flaggedMailContent","USER_NAMES","userNames","loggedUser","showToastMessage","dataSourceEntryId","EMAILS_TO_NOTIFY_FLAGGED_COMMENT","split","map","el","trim","filter","RegExp","test","APP_ID","Env","get","GLOBAL_COMMENTS_DATA_SOURCE","DS_DEFINITION","GLOBAL_COMMENTS_DATA_SOURCE_COLUMNS","ACCESS_RULES","concat","initializeChildren","$el","manageGlobalCommentsDataSource","DataSources","attributes","where","appId","then","dataSources","dsExist","find","name","create","columns","accessRules","newDataSource","initVue","message","UI","Toast","$","removeClass","Vue","data","commentInput","commentState","comments","computed","commentsData","methods","clearState","showToastProgress","arguments","length","undefined","position","backdrop","tapToDismiss","duration","closeToastProgress","dismiss","checkCommentState","comment","state","action","flagComment","_this","flagged","connectByName","connection","update","Flagged","GUID","getExistingEmailsToNotifyAboutFlag","existingEmails","emails","user","adminName","options","to","email","type","html","subject","Communicate","batchSendEmail","setTimeout","toggleThreads","showThreads","connect","_defineProperty","$in","_toConsumableArray","records","getUserData","userEmails","getComments","_this2","entryId","users","threads","forEach","currentUser","userFullName","getUserFullName","userInitials","getUserInitials","userAvatar","Media","authenticate","openDropdown","push","thread","userData","join","isLikedByLoginUser","likes","includes","Email","isLoggedUserOwnerOfComment","getTimeFromTimestamp","timestamp","moment","format","getDateFromTimestamp","manageLike","Likes","clearCommentState","prepareComment","Message","manageComment","_this3","toInsert","Timestamp","Date","toISOString","insert","record","unshift","deleteComment","_this4","isThread","title","labels","confirm","result","Promise","reject","deleteCommentPromise","removeById","commit","append","extend","mounted","_this5","Session","session","_"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// TODO: Change Entry Id for a entity to be a GUID\r\nFliplet.Widget.instance('comments', function(widgetData) {\r\n  const DS_COMMENTS = 'Global Comments';\r\n  const DS_USERS = widgetData.userDataSource ? widgetData.userDataSource.id : null;\r\n  const QUERY = Fliplet.Navigate.query;\r\n  const EMAIL_COLUMN = widgetData.columnEmail;\r\n  const USER_PHOTO_COLUMN = widgetData.columnUserPhoto;\r\n  const FLAGGED_EMAILS = widgetData.flaggedEmails;\r\n  const FLAGGED_MAIL_CONTENT = widgetData.flaggedMailContent;\r\n  const USER_NAMES = widgetData.userNames;\r\n  let loggedUser = null;\r\n\r\n  if (!DS_USERS) {\r\n    return showToastMessage('Please select Data source');\r\n  }\r\n\r\n  if (!EMAIL_COLUMN) {\r\n    return showToastMessage('Please select column for the email');\r\n  }\r\n\r\n  if (!USER_NAMES) {\r\n    return showToastMessage('Please select user names');\r\n  }\r\n\r\n  if (!QUERY.dataSourceEntryId) {\r\n    return showToastMessage('No data source entry ID provided');\r\n  }\r\n\r\n  debugger;\r\n  const EMAILS_TO_NOTIFY_FLAGGED_COMMENT = !FLAGGED_EMAILS\r\n    ? []\r\n    : FLAGGED_EMAILS.split(',')\r\n      .map((el) => el.trim())\r\n      .filter((el) => RegExp(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/).test(el));\r\n\r\n  const APP_ID = Fliplet.Env.get('appId');\r\n  const GLOBAL_COMMENTS_DATA_SOURCE = 'Global Comments';\r\n  const DS_DEFINITION = { 'guid': 'GUID' };\r\n  const GLOBAL_COMMENTS_DATA_SOURCE_COLUMNS = [\r\n    'GUID', 'Author Email', 'Comment GUID', 'Message', 'Likes', 'Timestamp', 'Flagged', 'Entry Id'\r\n  ];\r\n  const ACCESS_RULES = [{\r\n    'type': ['select', 'insert'],\r\n    'allow': 'loggedIn',\r\n    'enabled': true\r\n  },\r\n  {\r\n    'type': ['delete'],\r\n    'allow': { 'user': { 'Admin': { 'equals': 'Yes' } } },\r\n    'enabled': true\r\n  },\r\n  {\r\n    'type': ['update', 'delete'],\r\n    'allow': { 'user': { 'Author Email': { 'equals': `{{user.[${EMAIL_COLUMN}]}}` } } },\r\n    'enabled': true\r\n  }];\r\n\r\n\r\n  if (!Fliplet.Env.get('interact')) {\r\n    Fliplet.Widget.initializeChildren(this.$el, this);\r\n    manageGlobalCommentsDataSource();\r\n  }\r\n\r\n  function manageGlobalCommentsDataSource() {\r\n    return Fliplet.DataSources.get({\r\n      attributes: ['id', 'name'],\r\n      where: { appId: APP_ID }\r\n    })\r\n      .then(function(dataSources) {\r\n        const dsExist = dataSources.find(el => el.name === GLOBAL_COMMENTS_DATA_SOURCE);\r\n\r\n        if (!dsExist) {\r\n          return Fliplet.DataSources.create({\r\n            name: GLOBAL_COMMENTS_DATA_SOURCE,\r\n            appId: APP_ID,\r\n            columns: GLOBAL_COMMENTS_DATA_SOURCE_COLUMNS,\r\n            accessRules: ACCESS_RULES,\r\n            'definition': DS_DEFINITION\r\n          }).then(function(newDataSource) {\r\n            // newDataSource.id\r\n            initVue();\r\n          });\r\n        }\r\n\r\n        initVue();\r\n      });\r\n  }\r\n\r\n  function showToastMessage(message) {\r\n    return Fliplet.UI.Toast(message);\r\n  }\r\n\r\n  function initVue() {\r\n    $('[name=\"comments\"]').removeClass('hidden');\r\n    Fliplet().then(() => {\r\n      new Vue({\r\n        el: '#app-comments',\r\n        data: {\r\n          commentInput: '',\r\n          commentState: null,\r\n          message: 'Hello, Vue!',\r\n          comments: []\r\n        },\r\n        computed: {\r\n          commentsData() {\r\n            return this.comments;\r\n          }\r\n        },\r\n        methods: {\r\n          clearState() {\r\n            this.commentState = null;\r\n            this.commentInput = '';\r\n          },\r\n          showToastProgress(message = 'Processing') {\r\n            Fliplet.UI.Toast({\r\n              message,\r\n              position: 'center',\r\n              backdrop: true,\r\n              tapToDismiss: false,\r\n              duration: false\r\n            });\r\n          },\r\n          closeToastProgress() {\r\n            Fliplet.UI.Toast.dismiss();\r\n          },\r\n          checkCommentState(comment, state) {\r\n            if (state === 'active') {\r\n              return this.commentState && this.commentState.comment.id === comment.id;\r\n            } else if (state === 'reply') {\r\n              return this.commentState && this.commentState.action === 'reply' && this.commentState.comment.id === comment.id;\r\n            } else if (state === 'edit') {\r\n              return this.commentState && this.commentState.action === 'edit' && this.commentState.comment.id === comment.id;\r\n            }\r\n\r\n            return false;\r\n          },\r\n          flagComment(comment) {\r\n            this.showToastProgress('Flagging the comment...');\r\n            comment.data.flagged = true;\r\n\r\n            Fliplet.DataSources.connectByName(DS_COMMENTS)\r\n              .then(connection => {\r\n                return connection.update(comment.id, {\r\n                  Flagged: comment.data.flagged,\r\n                  GUID: comment.data.GUID\r\n                });\r\n              })\r\n              .then(() => {\r\n                if (EMAILS_TO_NOTIFY_FLAGGED_COMMENT.length) {\r\n                  return this\r\n                    .getExistingEmailsToNotifyAboutFlag()\r\n                    .then(existingEmails => {\r\n                      let emails = existingEmails.map((user) => {\r\n                        let adminName = '';\r\n\r\n                        if (USER_NAMES.length === 1) {\r\n                          adminName = user.data[USER_NAMES[0]];\r\n                        } else if (USER_NAMES.length === 2) {\r\n                          adminName = `${user.data[USER_NAMES[0]]} ${user.data[USER_NAMES[1]]}`;\r\n                        }\r\n\r\n                        return {\r\n                          options: {\r\n                            to: [\r\n                              { email: user.data[EMAIL_COLUMN], name: adminName, type: 'to' }\r\n                            ],\r\n                            html: FLAGGED_MAIL_CONTENT,\r\n                            subject: 'Comment flagged'\r\n                          // from_name: 'Example Name'\r\n                          }\r\n                        };\r\n                      });\r\n\r\n                      return Fliplet.Communicate.batchSendEmail(emails).then(() => {\r\n                        this.closeToastProgress();\r\n                        setTimeout(() => {\r\n                          comment.data.flagged = false;\r\n                        }, 2000);\r\n                      });\r\n                    });\r\n                }\r\n              });\r\n          },\r\n          toggleThreads(comment) {\r\n            comment.showThreads = !comment.showThreads;\r\n          },\r\n          getExistingEmailsToNotifyAboutFlag() {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then(connection =>\r\n                connection.find({\r\n                  where: { [EMAIL_COLUMN]: { $in: EMAILS_TO_NOTIFY_FLAGGED_COMMENT } },\r\n                  attributes: [EMAIL_COLUMN, ...USER_NAMES]\r\n                })\r\n              )\r\n              .then((records) => records);\r\n          },\r\n          getUserData(userEmails) {\r\n            return Fliplet.DataSources.connect(DS_USERS)\r\n              .then(connection =>\r\n                connection.find({\r\n                  where: { [EMAIL_COLUMN]: { $in: userEmails } },\r\n                  attributes: [\r\n                    EMAIL_COLUMN,\r\n                    ...USER_NAMES,\r\n                    USER_PHOTO_COLUMN\r\n                  ]\r\n                })\r\n              )\r\n              .then(records => records);\r\n          },\r\n          getComments() {\r\n            this.showToastProgress('Loading comments...');\r\n\r\n            let entryId = QUERY.dataSourceEntryId;\r\n\r\n            return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n              connection => {\r\n                return connection\r\n                  .find({ where: { 'Entry Id': entryId } })\r\n                  .then(records => {\r\n                    let userEmails = records.map(\r\n                      (el) => el.data['Author Email']\r\n                    );\r\n\r\n                    return this.getUserData(userEmails).then(users => {\r\n                      let comments = [];\r\n                      let threads = [];\r\n\r\n                      records.forEach((el) => {\r\n                        let currentUser = users.find(\r\n                          (user) =>\r\n                            user.data[EMAIL_COLUMN] === el.data['Author Email']\r\n                        );\r\n\r\n                        el.data.userFullName = this.getUserFullName(currentUser.data);\r\n                        el.data.userInitials = this.getUserInitials(currentUser.data);\r\n                        el.data.userAvatar = currentUser.data[USER_PHOTO_COLUMN]\r\n                          ? Fliplet.Media.authenticate(\r\n                            currentUser.data[USER_PHOTO_COLUMN]\r\n                          )\r\n                          : null;\r\n                        el.data.flagged = false;\r\n                        el.data.openDropdown = false;\r\n\r\n                        if (el.data['Comment GUID']) {\r\n                          threads.push(el);\r\n                        } else {\r\n                          comments.push(el);\r\n                        }\r\n                      });\r\n\r\n                      this.comments = comments.map((el) => {\r\n                        el.showThreads = false;\r\n                        el.threads = threads.filter(\r\n                          (thread) =>\r\n                            thread.data['Comment GUID'] === el.data['GUID']\r\n                        );\r\n\r\n                        return el;\r\n                      });\r\n\r\n                      this.closeToastProgress();\r\n                    });\r\n                  });\r\n              }\r\n            );\r\n          },\r\n          getUserFullName(userData) {\r\n            let userFullName = '';\r\n\r\n            if (USER_NAMES.length === 1) {\r\n              userFullName = userData[USER_NAMES[0]];\r\n            } else if (USER_NAMES.length === 2) {\r\n              userFullName = `${userData[USER_NAMES[0]]} ${userData[USER_NAMES[1]]}`;\r\n            }\r\n\r\n            return userFullName;\r\n          },\r\n          getUserInitials(userData) {\r\n            let userInitials = '';\r\n\r\n            if (USER_NAMES.length === 1) {\r\n              userInitials = (\r\n                userData[USER_NAMES[0]] || ''\r\n              )\r\n                .split(' ')\r\n                .map((name) => name[0])\r\n                .join('');\r\n            } else if (USER_NAMES.length === 2) {\r\n              userInitials = USER_NAMES.map((el) => userData[el] ? userData[el][0] : '').join('');\r\n            }\r\n\r\n            return userInitials;\r\n          },\r\n          isLikedByLoginUser(likes) {\r\n            return likes.includes(loggedUser.Email);\r\n          },\r\n          isLoggedUserOwnerOfComment(comment) {\r\n            return comment.data['Author Email'] === loggedUser.Email;\r\n          },\r\n          getTimeFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('HH:mm');\r\n          },\r\n          getDateFromTimestamp: function(timestamp) {\r\n            return moment(timestamp).format('MM/DD/YYYY');\r\n          },\r\n          manageLike(comment) {\r\n            if (this.isLikedByLoginUser(comment.data.Likes)) {\r\n              comment.data.Likes = comment.data.Likes.filter(\r\n                (el) => el !== loggedUser[EMAIL_COLUMN]\r\n              );\r\n            } else {\r\n              comment.data.Likes.push(loggedUser[EMAIL_COLUMN]);\r\n            }\r\n\r\n            return Fliplet.DataSources.connectByName(DS_COMMENTS).then(\r\n              connection => {\r\n                return connection.update(comment.id, {\r\n                  Likes: comment.data.Likes,\r\n                  GUID: comment.data.GUID\r\n                });\r\n              }\r\n            );\r\n          },\r\n          clearCommentState() {\r\n            this.commentState = null;\r\n            this.commentInput = '';\r\n          },\r\n          prepareComment(comment, action) {\r\n            this.commentState = {\r\n              comment,\r\n              action\r\n            };\r\n\r\n            if (action === 'edit') {\r\n              this.commentInput = comment.data.Message;\r\n            }\r\n          },\r\n          manageComment() {\r\n            if (this.commentInput) {\r\n              if (\r\n                !this.commentState\r\n                || this.commentState.action === 'reply'\r\n              ) {\r\n                this.showToastProgress('Adding comment...');\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS).then(connection => {\r\n                  let toInsert = {\r\n                    Message: this.commentInput,\r\n                    'Author Email': loggedUser[EMAIL_COLUMN],\r\n                    Timestamp: new Date().toISOString(),\r\n                    'Entry Id': QUERY.dataSourceEntryId,\r\n                    Likes: []\r\n                  };\r\n\r\n                  if (\r\n                    this.commentState\r\n                    && this.commentState.action === 'reply'\r\n                  ) {\r\n                    toInsert['Comment GUID']\r\n                      = this.commentState.comment.data['GUID'];\r\n                  }\r\n\r\n                  return connection.insert(toInsert).then(record => {\r\n                    record.data.userInitials = this.getUserInitials(loggedUser);\r\n                    record.data.flagged = false;\r\n                    record.data.openDropdown = false;\r\n                    record.showThreads = false;\r\n                    record.threads = [];\r\n\r\n                    if (\r\n                      this.commentState\r\n                      && this.commentState.action === 'reply'\r\n                    ) {\r\n                      this.comments = this.comments.map((el) => {\r\n                        if (\r\n                          el.data['GUID']\r\n                          === this.commentState.comment.data['GUID']\r\n                        ) {\r\n                          el.threads.push(record);\r\n                        }\r\n\r\n                        return el;\r\n                      });\r\n                    } else {\r\n                      this.comments.unshift(record);\r\n                    }\r\n\r\n                    this.closeToastProgress();\r\n                    this.clearCommentState();\r\n                  });\r\n                });\r\n              } else {\r\n                this.showToastProgress('Updating comment...');\r\n                Fliplet.DataSources.connectByName(DS_COMMENTS).then(connection => {\r\n                  return connection\r\n                    .update(this.commentState.comment.id, {\r\n                      Message: this.commentInput,\r\n                      GUID: this.commentState.comment.data['GUID']\r\n                    })\r\n                    .then(() => {\r\n                      this.comments = this.comments.map((el) => {\r\n                        if (el.id === this.commentState.comment.id) {\r\n                          el.data.Message = this.commentInput;\r\n                        }\r\n                      });\r\n\r\n                      this.clearCommentState();\r\n                      this.closeToastProgress();\r\n                    });\r\n                });\r\n              }\r\n            }\r\n          },\r\n          deleteComment(comment, isThread = false) {\r\n            let message = 'Are you sure you want to delete this comment? Note that all the threads will be deleted as well.';\r\n\r\n            if (isThread) {\r\n              message = 'Are you sure you want to delete this thread?';\r\n            }\r\n\r\n            let options = {\r\n              title: 'Delete comment?',\r\n              message,\r\n              labels: ['Agree', 'No'] // Native only (defaults to [OK,Cancel])\r\n            };\r\n\r\n            Fliplet.Navigate.confirm(options).then(result => {\r\n              if (!result) {\r\n                return Promise.reject(''); // Not confirmed!\r\n              }\r\n\r\n              this.showToastProgress('Deleting comment...');\r\n\r\n              let deleteCommentPromise;\r\n\r\n              if (isThread) {\r\n                deleteCommentPromise = Fliplet.DataSources.connectByName(\r\n                  DS_COMMENTS\r\n                ).then(connection => {\r\n                  return connection.removeById(comment.id).then(() => {\r\n                    this.comments = this.comments.map((el) => {\r\n                      if (el.data['GUID'] === comment.data['Comment GUID']) {\r\n                        el.threads = el.threads.filter(\r\n                          (el) => el.id !== comment.id\r\n                        );\r\n                      }\r\n\r\n                      return el;\r\n                    });\r\n\r\n                    this.closeToastProgress();\r\n                  });\r\n                });\r\n              } else {\r\n                deleteCommentPromise = Fliplet.DataSources.connectByName(\r\n                  DS_COMMENTS\r\n                ).then(connection => {\r\n                  return connection\r\n                    .find({ where: { 'Comment GUID': comment.data.GUID } })\r\n                    .then(records => { // All threads for the comment\r\n                      return connection\r\n                        .commit({\r\n                          delete: records.map((el) => el.id),\r\n                          append: true,\r\n                          extend: true\r\n                        })\r\n                        .then(() => {\r\n                          return connection\r\n                            .removeById(comment.id)\r\n                            .then(() => {\r\n                              this.comments = this.comments.filter(\r\n                                (el) => el.id !== comment.id\r\n                              );\r\n                              this.closeToastProgress();\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n              }\r\n\r\n              return deleteCommentPromise;\r\n            });\r\n          }\r\n        },\r\n        mounted() {\r\n          Fliplet.Session.get().then(session => {\r\n            loggedUser = _.get(session, 'entries.dataSource.data');\r\n\r\n            if (loggedUser) {\r\n              this.getComments();\r\n            } else {\r\n              showToastMessage('You need to be logged in to see the comments');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n});\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}